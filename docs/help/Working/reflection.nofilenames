<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Gemstone.Data">
      <assemblydata version="1.0.7.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Grid Protection Alliance</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Release</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright © 2020</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GPA Gemstone Data Library</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.7.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.7 -- Release Build</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gemstone</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Gemstone.Data</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Gemstone.Data">
      <topicdata group="api" />
      <apidata name="Gemstone.Data" group="namespace" />
      <elements>
        <element api="T:Gemstone.Data.DatabaseType" />
        <element api="T:Gemstone.Data.AdoDataConnection" />
        <element api="T:Gemstone.Data.IBulkDataOperation" />
        <element api="T:Gemstone.Data.BulkDataOperationBase" />
        <element api="T:Gemstone.Data.DataDeleter" />
        <element api="T:Gemstone.Data.DataInserter" />
        <element api="T:Gemstone.Data.DataSetEqualityComparer" />
        <element api="T:Gemstone.Data.DataUpdater" />
        <element api="T:Gemstone.Data.OleDbType" />
        <element api="T:Gemstone.Data.TableType" />
        <element api="T:Gemstone.Data.ReferentialAction" />
        <element api="T:Gemstone.Data.Field" />
        <element api="T:Gemstone.Data.ForeignKeyField" />
        <element api="T:Gemstone.Data.ForeignKeyFields" />
        <element api="T:Gemstone.Data.Fields" />
        <element api="T:Gemstone.Data.Table" />
        <element api="T:Gemstone.Data.Tables" />
        <element api="T:Gemstone.Data.Tables.ReferentialOrderComparer" />
        <element api="T:Gemstone.Data.Schema" />
      </elements>
    </api>
    <api id="T:Gemstone.Data.AdoDataConnection">
      <topicdata group="api" />
      <apidata name="AdoDataConnection" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.#ctor">
          <element api="M:Gemstone.Data.AdoDataConnection.#ctor(System.String,System.String)" />
          <element api="M:Gemstone.Data.AdoDataConnection.#ctor(System.Data.IDbConnection,System.Type,System.Boolean)" />
          <element api="M:Gemstone.Data.AdoDataConnection.#ctor(System.String,System.Type,System.Type)" />
        </element>
        <element api="P:Gemstone.Data.AdoDataConnection.AdapterType" />
        <element api="M:Gemstone.Data.AdoDataConnection.Bool(System.Boolean)" />
        <element api="P:Gemstone.Data.AdoDataConnection.Connection" />
        <element api="P:Gemstone.Data.AdoDataConnection.DatabaseType" />
        <element api="P:Gemstone.Data.AdoDataConnection.DefaultIsloationLevel" />
        <element api="P:Gemstone.Data.AdoDataConnection.DefaultTimeout" />
        <element api="Overload:Gemstone.Data.AdoDataConnection.Dispose">
          <element api="M:Gemstone.Data.AdoDataConnection.Dispose" />
          <element api="M:Gemstone.Data.AdoDataConnection.Dispose(System.Boolean)" />
        </element>
        <element api="M:Gemstone.Data.AdoDataConnection.EscapeIdentifier(System.String,System.Boolean)" />
        <element api="Overload:Gemstone.Data.AdoDataConnection.ExecuteNonQuery">
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteNonQuery(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteNonQuery(System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.ExecuteReader">
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.Data.CommandBehavior,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar">
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Object,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Object,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.ExecuteScript">
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScript(System.IO.TextReader)" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScript(System.String)" />
        </element>
        <element api="M:Gemstone.Data.AdoDataConnection.Finalize" />
        <element api="Overload:Gemstone.Data.AdoDataConnection.Guid">
          <element api="M:Gemstone.Data.AdoDataConnection.Guid(System.Guid)" />
          <element api="M:Gemstone.Data.AdoDataConnection.Guid(System.Data.DataRow,System.String)" />
        </element>
        <element api="P:Gemstone.Data.AdoDataConnection.IsJetEngine" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsMySQL" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsOracle" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsPostgreSQL" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsSqlite" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsSQLServer" />
        <element api="M:Gemstone.Data.AdoDataConnection.ParameterizedQueryString(System.String,System.String[])" />
        <element api="Overload:Gemstone.Data.AdoDataConnection.RetrieveData">
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveData(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveData(System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.RetrieveDataSet">
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveDataSet(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveDataSet(System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.RetrieveRow">
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveRow(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveRow(System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:Gemstone.Data.AdoDataConnection.ToDataProviderString(System.Type,System.Type)" />
        <element api="P:Gemstone.Data.AdoDataConnection.UtcNow" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.AdoDataConnection">
      <topicdata name="AdoDataConnection" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.AdoDataConnection" />
      <apidata name="AdoDataConnection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.AdoDataConnection.Bool(System.Boolean)" />
        <element api="Overload:Gemstone.Data.AdoDataConnection.Dispose">
          <element api="M:Gemstone.Data.AdoDataConnection.Dispose" />
          <element api="M:Gemstone.Data.AdoDataConnection.Dispose(System.Boolean)" />
        </element>
        <element api="M:Gemstone.Data.AdoDataConnection.EscapeIdentifier(System.String,System.Boolean)" />
        <element api="Overload:Gemstone.Data.AdoDataConnection.ExecuteNonQuery">
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteNonQuery(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteNonQuery(System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.ExecuteReader">
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.Data.CommandBehavior,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar">
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Object,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Object,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.ExecuteScript">
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScript(System.IO.TextReader)" />
          <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScript(System.String)" />
        </element>
        <element api="M:Gemstone.Data.AdoDataConnection.Finalize" />
        <element api="Overload:Gemstone.Data.AdoDataConnection.Guid">
          <element api="M:Gemstone.Data.AdoDataConnection.Guid(System.Guid)" />
          <element api="M:Gemstone.Data.AdoDataConnection.Guid(System.Data.DataRow,System.String)" />
        </element>
        <element api="M:Gemstone.Data.AdoDataConnection.ParameterizedQueryString(System.String,System.String[])" />
        <element api="Overload:Gemstone.Data.AdoDataConnection.RetrieveData">
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveData(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveData(System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.RetrieveDataSet">
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveDataSet(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveDataSet(System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.AdoDataConnection.RetrieveRow">
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveRow(System.String,System.Object[])" />
          <element api="M:Gemstone.Data.AdoDataConnection.RetrieveRow(System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:Gemstone.Data.AdoDataConnection.ToDataProviderString(System.Type,System.Type)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.AdoDataConnection">
      <topicdata name="AdoDataConnection" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.AdoDataConnection" />
      <apidata name="AdoDataConnection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Gemstone.Data.AdoDataConnection.AdapterType" />
        <element api="P:Gemstone.Data.AdoDataConnection.Connection" />
        <element api="P:Gemstone.Data.AdoDataConnection.DatabaseType" />
        <element api="P:Gemstone.Data.AdoDataConnection.DefaultIsloationLevel" />
        <element api="P:Gemstone.Data.AdoDataConnection.DefaultTimeout" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsJetEngine" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsMySQL" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsOracle" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsPostgreSQL" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsSqlite" />
        <element api="P:Gemstone.Data.AdoDataConnection.IsSQLServer" />
        <element api="P:Gemstone.Data.AdoDataConnection.UtcNow" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.#ctor(System.String,System.String)" />
        <element api="M:Gemstone.Data.AdoDataConnection.#ctor(System.Data.IDbConnection,System.Type,System.Boolean)" />
        <element api="M:Gemstone.Data.AdoDataConnection.#ctor(System.String,System.Type,System.Type)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.Dispose" />
        <element api="M:Gemstone.Data.AdoDataConnection.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.ExecuteNonQuery">
      <topicdata name="ExecuteNonQuery" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteNonQuery(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteNonQuery(System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.ExecuteReader">
      <topicdata name="ExecuteReader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.Data.CommandBehavior,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar">
      <topicdata name="ExecuteScalar" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Object,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Object,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.ExecuteScript">
      <topicdata name="ExecuteScript" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteScript" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScript(System.IO.TextReader)" />
        <element api="M:Gemstone.Data.AdoDataConnection.ExecuteScript(System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.Guid">
      <topicdata name="Guid" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Guid" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.Guid(System.Guid)" />
        <element api="M:Gemstone.Data.AdoDataConnection.Guid(System.Data.DataRow,System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.RetrieveData">
      <topicdata name="RetrieveData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.RetrieveData(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.RetrieveData(System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.RetrieveDataSet">
      <topicdata name="RetrieveDataSet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.RetrieveDataSet(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.RetrieveDataSet(System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.AdoDataConnection.RetrieveRow">
      <topicdata name="RetrieveRow" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.AdoDataConnection.RetrieveRow(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.AdoDataConnection.RetrieveRow(System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.#ctor(System.Data.IDbConnection,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.AdoDataConnection.#ctor" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="adapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="disposeConnection">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.AdoDataConnection.#ctor" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <parameters>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataProviderString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.#ctor(System.String,System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.AdoDataConnection.#ctor" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <parameters>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="connectionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="adapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.AdapterType">
      <topicdata group="api" />
      <apidata name="AdapterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AdapterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.Bool(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Bool" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Connection" />
      <returns>
        <type api="T:System.Data.IDbConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.DatabaseType">
      <topicdata group="api" />
      <apidata name="DatabaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DatabaseType" />
      <setter name="set_DatabaseType" />
      <returns>
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.DefaultIsloationLevel">
      <topicdata group="api" />
      <apidata name="DefaultIsloationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultIsloationLevel" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.DefaultTimeout">
      <topicdata group="api" />
      <apidata name="DefaultTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultTimeout" />
      <setter name="set_DefaultTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.Dispose" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Gemstone.Data.AdoDataConnection.Dispose" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.EscapeIdentifier(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="EscapeIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="useAnsiQuotes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteNonQuery(System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteNonQuery(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.Data.CommandBehavior,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteReader" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="behavior">
          <type api="T:System.Data.CommandBehavior" ref="false" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteReader" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteReader(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteReader" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.Int32,System.String,System.Object[])" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(System.String,System.Object[])" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Object,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.Object,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar(System.Type,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.String,System.Object[])" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Data.AdoDataConnection.ExecuteScalar``1(``0,System.String,System.Object[])" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScript(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ExecuteScript" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScript" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="scriptReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ExecuteScript(System.String)">
      <topicdata group="api" />
      <apidata name="ExecuteScript" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.ExecuteScript" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="scriptPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.Guid(System.Data.DataRow,System.String)">
      <topicdata group="api" />
      <apidata name="Guid" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.Guid" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.Guid(System.Guid)">
      <topicdata group="api" />
      <apidata name="Guid" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.Guid" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.IsJetEngine">
      <topicdata group="api" />
      <apidata name="IsJetEngine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsJetEngine" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.IsMySQL">
      <topicdata group="api" />
      <apidata name="IsMySQL" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsMySQL" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.IsOracle">
      <topicdata group="api" />
      <apidata name="IsOracle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsOracle" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.IsPostgreSQL">
      <topicdata group="api" />
      <apidata name="IsPostgreSQL" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPostgreSQL" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.IsSqlite">
      <topicdata group="api" />
      <apidata name="IsSqlite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSqlite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.IsSQLServer">
      <topicdata group="api" />
      <apidata name="IsSQLServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSQLServer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ParameterizedQueryString(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="ParameterizedQueryString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterNames" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.RetrieveData(System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.RetrieveData" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.RetrieveData(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.RetrieveData" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.RetrieveDataSet(System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.RetrieveDataSet(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.RetrieveRow(System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.RetrieveRow" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.RetrieveRow(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.AdoDataConnection.RetrieveRow" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sqlFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.AdoDataConnection.ToDataProviderString(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="ToDataProviderString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connectionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="adapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.AdoDataConnection.UtcNow">
      <topicdata group="api" />
      <apidata name="UtcNow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/AdoDataConnection.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UtcNow" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.BulkDataOperationBase">
      <topicdata group="api" />
      <apidata name="BulkDataOperationBase" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Gemstone.Data.DataDeleter" ref="true" />
          <type api="T:Gemstone.Data.DataInserter" ref="true" />
          <type api="T:Gemstone.Data.DataUpdater" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.BulkDataOperationBase.#ctor">
          <element api="M:Gemstone.Data.BulkDataOperationBase.#ctor" />
          <element api="M:Gemstone.Data.BulkDataOperationBase.#ctor(System.String,System.String)" />
          <element api="M:Gemstone.Data.BulkDataOperationBase.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)" />
        </element>
        <element api="M:Gemstone.Data.BulkDataOperationBase.Analyze" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Close" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Dispose(System.Boolean)" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ExcludedTables" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Execute" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.FromSchema" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnOverallProgress(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnRowProgress(System.String,System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnSQLFailure(System.String,System.Exception)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnTableProgress(System.String,System.Boolean,System.Int32,System.Int32)" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallProgress" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.OverallProgressStatus" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallTotal" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.RowProgressStatus" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.RowReportInterval" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.SQLFailure" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.TableCollection" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.TableProgressStatus" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.Timeout" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ToSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.UseFromSchemaReferentialIntegrity" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.UseFromSchemaRi" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.WorkTables" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.BulkDataOperationBase">
      <topicdata name="BulkDataOperationBase" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.BulkDataOperationBase" />
      <apidata name="BulkDataOperationBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.BulkDataOperationBase.Analyze" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Close" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Dispose(System.Boolean)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Execute" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnOverallProgress(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnRowProgress(System.String,System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnSQLFailure(System.String,System.Exception)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnTableProgress(System.String,System.Boolean,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.BulkDataOperationBase">
      <topicdata name="BulkDataOperationBase" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.BulkDataOperationBase" />
      <apidata name="BulkDataOperationBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Gemstone.Data.BulkDataOperationBase.ExcludedTables" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.FromSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.RowReportInterval" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.Timeout" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ToSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.UseFromSchemaReferentialIntegrity" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.WorkTables" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" />
      </containers>
    </api>
    <api id="Events.T:Gemstone.Data.BulkDataOperationBase">
      <topicdata name="BulkDataOperationBase" group="list" subgroup="Events" typeTopicId="T:Gemstone.Data.BulkDataOperationBase" />
      <apidata name="BulkDataOperationBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:Gemstone.Data.BulkDataOperationBase.OverallProgressStatus" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.RowProgressStatus" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.SQLFailure" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.TableProgressStatus" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.BulkDataOperationBase">
      <topicdata name="BulkDataOperationBase" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.BulkDataOperationBase" />
      <apidata name="BulkDataOperationBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallProgress" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallTotal" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.TableCollection" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.UseFromSchemaRi" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.BulkDataOperationBase.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.BulkDataOperationBase.#ctor" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.#ctor(System.String,System.String)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Gemstone.Data.BulkDataOperationBase.#ctor" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Gemstone.Data.BulkDataOperationBase.#ctor" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <parameters>
        <parameter name="fromSchema">
          <type api="T:Gemstone.Data.Schema" ref="true" />
        </parameter>
        <parameter name="toSchema">
          <type api="T:Gemstone.Data.Schema" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Gemstone.Data.BulkDataOperationBase.#ctor" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <parameters>
        <parameter name="fromConnectString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toConnectString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.Analyze">
      <topicdata group="api" />
      <apidata name="Analyze" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Gemstone.Data.IBulkDataOperation.Close">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.BulkDataOperationBase.ExcludedTables">
      <topicdata group="api" />
      <apidata name="ExcludedTables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExcludedTables" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.Execute">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata abstract="true" virtual="true" />
      <implements>
        <member api="M:Gemstone.Data.IBulkDataOperation.Execute">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.BulkDataOperationBase.FromSchema">
      <topicdata group="api" />
      <apidata name="FromSchema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_FromSchema" />
      <setter name="set_FromSchema" />
      <returns>
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.IBulkDataOperation.FromSchema">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.OnOverallProgress(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="OnOverallProgress" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="current">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="total">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.OnRowProgress(System.String,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="OnRowProgress" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="currentRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="totalRows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.OnSQLFailure(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name="OnSQLFailure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.BulkDataOperationBase.OnTableProgress(System.String,System.Boolean,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="OnTableProgress" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="executed">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="currentTable">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="totalTables">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.BulkDataOperationBase.OverallProgress">
      <topicdata group="api" />
      <apidata name="OverallProgress" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.BulkDataOperationBase.OverallProgressStatus">
      <topicdata group="api" />
      <apidata name="OverallProgressStatus" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_OverallProgressStatus" />
      <remover name="remove_OverallProgressStatus" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:Gemstone.Data.IBulkDataOperation.OverallProgressStatus">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.BulkDataOperationBase.OverallTotal">
      <topicdata group="api" />
      <apidata name="OverallTotal" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.BulkDataOperationBase.RowProgressStatus">
      <topicdata group="api" />
      <apidata name="RowProgressStatus" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowProgressStatus" />
      <remover name="remove_RowProgressStatus" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:Gemstone.Data.IBulkDataOperation.RowProgressStatus">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.BulkDataOperationBase.RowReportInterval">
      <topicdata group="api" />
      <apidata name="RowReportInterval" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RowReportInterval" />
      <setter name="set_RowReportInterval" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.IBulkDataOperation.RowReportInterval">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.BulkDataOperationBase.SQLFailure">
      <topicdata group="api" />
      <apidata name="SQLFailure" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_SQLFailure" />
      <remover name="remove_SQLFailure" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:Gemstone.Data.IBulkDataOperation.SQLFailure">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.BulkDataOperationBase.TableCollection">
      <topicdata group="api" />
      <apidata name="TableCollection" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.BulkDataOperationBase.TableProgressStatus">
      <topicdata group="api" />
      <apidata name="TableProgressStatus" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_TableProgressStatus" />
      <remover name="remove_TableProgressStatus" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:Gemstone.Data.IBulkDataOperation.TableProgressStatus">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.BulkDataOperationBase.Timeout">
      <topicdata group="api" />
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.IBulkDataOperation.Timeout">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.BulkDataOperationBase.ToSchema">
      <topicdata group="api" />
      <apidata name="ToSchema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ToSchema" />
      <setter name="set_ToSchema" />
      <returns>
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.IBulkDataOperation.ToSchema">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.BulkDataOperationBase.UseFromSchemaReferentialIntegrity">
      <topicdata group="api" />
      <apidata name="UseFromSchemaReferentialIntegrity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UseFromSchemaReferentialIntegrity" />
      <setter name="set_UseFromSchemaReferentialIntegrity" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.BulkDataOperationBase.UseFromSchemaRi">
      <topicdata group="api" />
      <apidata name="UseFromSchemaRi" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.BulkDataOperationBase.WorkTables">
      <topicdata group="api" />
      <apidata name="WorkTables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/BulkDataOperationBase.cs" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_WorkTables" />
      <returns>
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.IBulkDataOperation.WorkTables">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.DatabaseType">
      <topicdata group="api" />
      <apidata name="DatabaseType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.DatabaseType.Access" />
        <element api="F:Gemstone.Data.DatabaseType.SQLServer" />
        <element api="F:Gemstone.Data.DatabaseType.MySQL" />
        <element api="F:Gemstone.Data.DatabaseType.Oracle" />
        <element api="F:Gemstone.Data.DatabaseType.SQLite" />
        <element api="F:Gemstone.Data.DatabaseType.PostgreSQL" />
        <element api="F:Gemstone.Data.DatabaseType.Other" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DatabaseType.Access">
      <topicdata group="api" notopic="" />
      <apidata name="Access" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DatabaseType.MySQL">
      <topicdata group="api" notopic="" />
      <apidata name="MySQL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DatabaseType.Oracle">
      <topicdata group="api" notopic="" />
      <apidata name="Oracle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DatabaseType.Other">
      <topicdata group="api" notopic="" />
      <apidata name="Other" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DatabaseType.PostgreSQL">
      <topicdata group="api" notopic="" />
      <apidata name="PostgreSQL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DatabaseType.SQLite">
      <topicdata group="api" notopic="" />
      <apidata name="SQLite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DatabaseType.SQLServer">
      <topicdata group="api" notopic="" />
      <apidata name="SQLServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.DataDeleter">
      <topicdata group="api" />
      <apidata name="DataDeleter" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/DataDeleter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Data.BulkDataOperationBase.Analyze" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Dispose(System.Boolean)" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ExcludedTables" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.FromSchema" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnOverallProgress(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnRowProgress(System.String,System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnSQLFailure(System.String,System.Exception)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnTableProgress(System.String,System.Boolean,System.Int32,System.Int32)" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallProgress" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.OverallProgressStatus" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallTotal" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.RowProgressStatus" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.RowReportInterval" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.SQLFailure" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.TableCollection" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.TableProgressStatus" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.Timeout" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ToSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.UseFromSchemaReferentialIntegrity" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.UseFromSchemaRi" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.WorkTables" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.DataDeleter.#ctor">
          <element api="M:Gemstone.Data.DataDeleter.#ctor" />
          <element api="M:Gemstone.Data.DataDeleter.#ctor(System.String,System.String)" />
          <element api="M:Gemstone.Data.DataDeleter.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)" />
        </element>
        <element api="M:Gemstone.Data.DataDeleter.Close" />
        <element api="E:Gemstone.Data.DataDeleter.Disposed" />
        <element api="M:Gemstone.Data.DataDeleter.Execute" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.DataDeleter">
      <topicdata name="DataDeleter" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.DataDeleter" />
      <apidata name="DataDeleter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Gemstone.Data.BulkDataOperationBase.Analyze" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Dispose(System.Boolean)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnOverallProgress(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnRowProgress(System.String,System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnSQLFailure(System.String,System.Exception)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnTableProgress(System.String,System.Boolean,System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.DataDeleter.Close" />
        <element api="M:Gemstone.Data.DataDeleter.Execute" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.DataDeleter">
      <topicdata name="DataDeleter" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.DataDeleter" />
      <apidata name="DataDeleter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Gemstone.Data.BulkDataOperationBase.ExcludedTables" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.FromSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.RowReportInterval" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.Timeout" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ToSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.UseFromSchemaReferentialIntegrity" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.WorkTables" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" />
      </containers>
    </api>
    <api id="Events.T:Gemstone.Data.DataDeleter">
      <topicdata name="DataDeleter" group="list" subgroup="Events" typeTopicId="T:Gemstone.Data.DataDeleter" />
      <apidata name="DataDeleter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Gemstone.Data.BulkDataOperationBase.OverallProgressStatus" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.RowProgressStatus" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.SQLFailure" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.TableProgressStatus" />
        <element api="E:Gemstone.Data.DataDeleter.Disposed" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.DataDeleter">
      <topicdata name="DataDeleter" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.DataDeleter" />
      <apidata name="DataDeleter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallProgress" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallTotal" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.TableCollection" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.UseFromSchemaRi" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataDeleter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.DataDeleter.#ctor" />
        <element api="M:Gemstone.Data.DataDeleter.#ctor(System.String,System.String)" />
        <element api="M:Gemstone.Data.DataDeleter.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataDeleter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.DataDeleter.#ctor" />
      <sourceContext file="Gemstone.Data/DataDeleter.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataDeleter.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.DataDeleter.#ctor" />
      <sourceContext file="Gemstone.Data/DataDeleter.cs" />
      <parameters>
        <parameter name="fromSchema">
          <type api="T:Gemstone.Data.Schema" ref="true" />
        </parameter>
        <parameter name="toSchema">
          <type api="T:Gemstone.Data.Schema" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataDeleter.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.DataDeleter.#ctor" />
      <sourceContext file="Gemstone.Data/DataDeleter.cs" />
      <parameters>
        <parameter name="fromConnectString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toConnectString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataDeleter.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataDeleter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gemstone.Data.BulkDataOperationBase.Close">
          <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Gemstone.Data.IBulkDataOperation.Close">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.DataDeleter.Disposed">
      <topicdata group="api" />
      <apidata name="Disposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataDeleter.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disposed" />
      <remover name="remove_Disposed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataDeleter.Execute">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataDeleter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gemstone.Data.BulkDataOperationBase.Execute">
          <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Gemstone.Data.IBulkDataOperation.Execute">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataDeleter" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.DataInserter">
      <topicdata group="api" />
      <apidata name="DataInserter" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Data.BulkDataOperationBase.Analyze" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Dispose(System.Boolean)" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ExcludedTables" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.FromSchema" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnOverallProgress(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnRowProgress(System.String,System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnSQLFailure(System.String,System.Exception)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnTableProgress(System.String,System.Boolean,System.Int32,System.Int32)" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallProgress" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.OverallProgressStatus" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallTotal" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.RowProgressStatus" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.RowReportInterval" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.SQLFailure" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.TableCollection" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.TableProgressStatus" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.Timeout" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ToSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.UseFromSchemaReferentialIntegrity" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.UseFromSchemaRi" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.WorkTables" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.DataInserter.#ctor">
          <element api="M:Gemstone.Data.DataInserter.#ctor" />
          <element api="M:Gemstone.Data.DataInserter.#ctor(System.String,System.String)" />
          <element api="M:Gemstone.Data.DataInserter.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)" />
        </element>
        <element api="P:Gemstone.Data.DataInserter.AttemptBulkInsert" />
        <element api="P:Gemstone.Data.DataInserter.AttemptTruncateTable" />
        <element api="E:Gemstone.Data.DataInserter.BulkInsertCompleted" />
        <element api="P:Gemstone.Data.DataInserter.BulkInsertEncoding" />
        <element api="E:Gemstone.Data.DataInserter.BulkInsertException" />
        <element api="E:Gemstone.Data.DataInserter.BulkInsertExecuting" />
        <element api="P:Gemstone.Data.DataInserter.BulkInsertFilePath" />
        <element api="P:Gemstone.Data.DataInserter.BulkInsertSettings" />
        <element api="P:Gemstone.Data.DataInserter.ClearDestinationTables" />
        <element api="M:Gemstone.Data.DataInserter.Close" />
        <element api="P:Gemstone.Data.DataInserter.DelimiterReplacement" />
        <element api="E:Gemstone.Data.DataInserter.Disposed" />
        <element api="M:Gemstone.Data.DataInserter.Execute" />
        <element api="P:Gemstone.Data.DataInserter.ForceBulkInsert" />
        <element api="P:Gemstone.Data.DataInserter.ForceTruncateTable" />
        <element api="P:Gemstone.Data.DataInserter.PreserveAutoIncValues" />
        <element api="E:Gemstone.Data.DataInserter.TableCleared" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.DataInserter">
      <topicdata name="DataInserter" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.DataInserter" />
      <apidata name="DataInserter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Gemstone.Data.BulkDataOperationBase.Analyze" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Dispose(System.Boolean)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnOverallProgress(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnRowProgress(System.String,System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnSQLFailure(System.String,System.Exception)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnTableProgress(System.String,System.Boolean,System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.DataInserter.Close" />
        <element api="M:Gemstone.Data.DataInserter.Execute" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.DataInserter">
      <topicdata name="DataInserter" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.DataInserter" />
      <apidata name="DataInserter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Gemstone.Data.BulkDataOperationBase.ExcludedTables" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.FromSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.RowReportInterval" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.Timeout" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ToSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.UseFromSchemaReferentialIntegrity" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.WorkTables" />
        <element api="P:Gemstone.Data.DataInserter.AttemptBulkInsert" />
        <element api="P:Gemstone.Data.DataInserter.AttemptTruncateTable" />
        <element api="P:Gemstone.Data.DataInserter.BulkInsertEncoding" />
        <element api="P:Gemstone.Data.DataInserter.BulkInsertFilePath" />
        <element api="P:Gemstone.Data.DataInserter.BulkInsertSettings" />
        <element api="P:Gemstone.Data.DataInserter.ClearDestinationTables" />
        <element api="P:Gemstone.Data.DataInserter.DelimiterReplacement" />
        <element api="P:Gemstone.Data.DataInserter.ForceBulkInsert" />
        <element api="P:Gemstone.Data.DataInserter.ForceTruncateTable" />
        <element api="P:Gemstone.Data.DataInserter.PreserveAutoIncValues" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" />
      </containers>
    </api>
    <api id="Events.T:Gemstone.Data.DataInserter">
      <topicdata name="DataInserter" group="list" subgroup="Events" typeTopicId="T:Gemstone.Data.DataInserter" />
      <apidata name="DataInserter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Gemstone.Data.BulkDataOperationBase.OverallProgressStatus" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.RowProgressStatus" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.SQLFailure" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.TableProgressStatus" />
        <element api="E:Gemstone.Data.DataInserter.BulkInsertCompleted" />
        <element api="E:Gemstone.Data.DataInserter.BulkInsertException" />
        <element api="E:Gemstone.Data.DataInserter.BulkInsertExecuting" />
        <element api="E:Gemstone.Data.DataInserter.Disposed" />
        <element api="E:Gemstone.Data.DataInserter.TableCleared" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.DataInserter">
      <topicdata name="DataInserter" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.DataInserter" />
      <apidata name="DataInserter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallProgress" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallTotal" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.TableCollection" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.UseFromSchemaRi" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataInserter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.DataInserter.#ctor" />
        <element api="M:Gemstone.Data.DataInserter.#ctor(System.String,System.String)" />
        <element api="M:Gemstone.Data.DataInserter.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataInserter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.DataInserter.#ctor" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataInserter.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.DataInserter.#ctor" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <parameters>
        <parameter name="fromSchema">
          <type api="T:Gemstone.Data.Schema" ref="true" />
        </parameter>
        <parameter name="toSchema">
          <type api="T:Gemstone.Data.Schema" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataInserter.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.DataInserter.#ctor" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <parameters>
        <parameter name="fromConnectString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toConnectString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.AttemptBulkInsert">
      <topicdata group="api" />
      <apidata name="AttemptBulkInsert" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttemptBulkInsert" />
      <setter name="set_AttemptBulkInsert" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.AttemptTruncateTable">
      <topicdata group="api" />
      <apidata name="AttemptTruncateTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttemptTruncateTable" />
      <setter name="set_AttemptTruncateTable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.DataInserter.BulkInsertCompleted">
      <topicdata group="api" />
      <apidata name="BulkInsertCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BulkInsertCompleted" />
      <remover name="remove_BulkInsertCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.BulkInsertEncoding">
      <topicdata group="api" />
      <apidata name="BulkInsertEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BulkInsertEncoding" />
      <setter name="set_BulkInsertEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.DataInserter.BulkInsertException">
      <topicdata group="api" />
      <apidata name="BulkInsertException" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BulkInsertException" />
      <remover name="remove_BulkInsertException" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.DataInserter.BulkInsertExecuting">
      <topicdata group="api" />
      <apidata name="BulkInsertExecuting" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BulkInsertExecuting" />
      <remover name="remove_BulkInsertExecuting" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.BulkInsertFilePath">
      <topicdata group="api" />
      <apidata name="BulkInsertFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BulkInsertFilePath" />
      <setter name="set_BulkInsertFilePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.BulkInsertSettings">
      <topicdata group="api" />
      <apidata name="BulkInsertSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BulkInsertSettings" />
      <setter name="set_BulkInsertSettings" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.ClearDestinationTables">
      <topicdata group="api" />
      <apidata name="ClearDestinationTables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClearDestinationTables" />
      <setter name="set_ClearDestinationTables" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataInserter.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gemstone.Data.BulkDataOperationBase.Close">
          <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Gemstone.Data.IBulkDataOperation.Close">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.DelimiterReplacement">
      <topicdata group="api" />
      <apidata name="DelimiterReplacement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DelimiterReplacement" />
      <setter name="set_DelimiterReplacement" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.DataInserter.Disposed">
      <topicdata group="api" />
      <apidata name="Disposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disposed" />
      <remover name="remove_Disposed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataInserter.Execute">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gemstone.Data.BulkDataOperationBase.Execute">
          <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Gemstone.Data.IBulkDataOperation.Execute">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.ForceBulkInsert">
      <topicdata group="api" />
      <apidata name="ForceBulkInsert" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ForceBulkInsert" />
      <setter name="set_ForceBulkInsert" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.ForceTruncateTable">
      <topicdata group="api" />
      <apidata name="ForceTruncateTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ForceTruncateTable" />
      <setter name="set_ForceTruncateTable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.DataInserter.PreserveAutoIncValues">
      <topicdata group="api" />
      <apidata name="PreserveAutoIncValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PreserveAutoIncValues" />
      <setter name="set_PreserveAutoIncValues" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.DataInserter.TableCleared">
      <topicdata group="api" />
      <apidata name="TableCleared" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataInserter.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TableCleared" />
      <remover name="remove_TableCleared" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataInserter" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.DataSetEqualityComparer">
      <topicdata group="api" />
      <apidata name="DataSetEqualityComparer" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/DataSetEqualityComparer.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
          <specialization>
            <type api="T:System.Data.DataSet" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:Gemstone.Data.DataSetEqualityComparer.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Gemstone.Data.DataSetEqualityComparer.Equals(System.Data.DataSet,System.Data.DataSet)" />
        </element>
        <element api="Overload:Gemstone.Data.DataSetEqualityComparer.GetHashCode">
          <element api="M:System.Object.GetHashCode">
            <apidata name="GetHashCode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Int32" ref="false" />
            </returns>
            <containers>
              <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Gemstone.Data.DataSetEqualityComparer.GetHashCode(System.Data.DataSet)" />
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="F:Gemstone.Data.DataSetEqualityComparer.Default" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.DataSetEqualityComparer">
      <topicdata name="DataSetEqualityComparer" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.DataSetEqualityComparer" />
      <apidata name="DataSetEqualityComparer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Gemstone.Data.DataSetEqualityComparer.Equals">
          <element api="M:System.Object.Equals(System.Object)">
            <apidata name="Equals" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="obj">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Boolean" ref="false" />
            </returns>
            <containers>
              <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Gemstone.Data.DataSetEqualityComparer.Equals(System.Data.DataSet,System.Data.DataSet)" />
        </element>
        <element api="Overload:Gemstone.Data.DataSetEqualityComparer.GetHashCode">
          <element api="M:System.Object.GetHashCode">
            <apidata name="GetHashCode" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Int32" ref="false" />
            </returns>
            <containers>
              <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System" />
              <type api="T:System.Object" ref="true" />
            </containers>
          </element>
          <element api="M:Gemstone.Data.DataSetEqualityComparer.GetHashCode(System.Data.DataSet)" />
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataSetEqualityComparer" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.DataSetEqualityComparer">
      <topicdata name="DataSetEqualityComparer" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.DataSetEqualityComparer" />
      <apidata name="DataSetEqualityComparer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.DataSetEqualityComparer.Default" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataSetEqualityComparer" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataSetEqualityComparer.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.DataSetEqualityComparer.Equals(System.Data.DataSet,System.Data.DataSet)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataSetEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataSetEqualityComparer.GetHashCode">
      <topicdata name="GetHashCode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.DataSetEqualityComparer.GetHashCode(System.Data.DataSet)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataSetEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetEqualityComparer.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataSetEqualityComparer.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetEqualityComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataSetEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataSetEqualityComparer.Equals(System.Data.DataSet,System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.DataSetEqualityComparer.Equals" />
      <sourceContext file="Gemstone.Data/DataSetEqualityComparer.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <type api="T:System.Data.DataSet" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataSetEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataSetEqualityComparer.GetHashCode(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.DataSetEqualityComparer.GetHashCode" />
      <sourceContext file="Gemstone.Data/DataSetEqualityComparer.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <type api="T:System.Data.DataSet" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataSetEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.DataUpdater">
      <topicdata group="api" />
      <apidata name="DataUpdater" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/DataUpdater.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Data.BulkDataOperationBase.Analyze" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Dispose(System.Boolean)" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ExcludedTables" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.FromSchema" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnOverallProgress(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnRowProgress(System.String,System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnSQLFailure(System.String,System.Exception)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnTableProgress(System.String,System.Boolean,System.Int32,System.Int32)" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallProgress" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.OverallProgressStatus" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallTotal" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.RowProgressStatus" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.RowReportInterval" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.SQLFailure" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.TableCollection" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.TableProgressStatus" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.Timeout" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ToSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.UseFromSchemaReferentialIntegrity" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.UseFromSchemaRi" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.WorkTables" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.DataUpdater.#ctor">
          <element api="M:Gemstone.Data.DataUpdater.#ctor" />
          <element api="M:Gemstone.Data.DataUpdater.#ctor(System.String,System.String)" />
          <element api="M:Gemstone.Data.DataUpdater.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)" />
        </element>
        <element api="M:Gemstone.Data.DataUpdater.Close" />
        <element api="E:Gemstone.Data.DataUpdater.Disposed" />
        <element api="M:Gemstone.Data.DataUpdater.Execute" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.DataUpdater">
      <topicdata name="DataUpdater" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.DataUpdater" />
      <apidata name="DataUpdater" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Gemstone.Data.BulkDataOperationBase.Analyze" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.Dispose(System.Boolean)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnOverallProgress(System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnRowProgress(System.String,System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnSQLFailure(System.String,System.Exception)" />
        <element api="M:Gemstone.Data.BulkDataOperationBase.OnTableProgress(System.String,System.Boolean,System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.DataUpdater.Close" />
        <element api="M:Gemstone.Data.DataUpdater.Execute" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.DataUpdater">
      <topicdata name="DataUpdater" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.DataUpdater" />
      <apidata name="DataUpdater" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Gemstone.Data.BulkDataOperationBase.ExcludedTables" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.FromSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.RowReportInterval" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.Timeout" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.ToSchema" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.UseFromSchemaReferentialIntegrity" />
        <element api="P:Gemstone.Data.BulkDataOperationBase.WorkTables" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" />
      </containers>
    </api>
    <api id="Events.T:Gemstone.Data.DataUpdater">
      <topicdata name="DataUpdater" group="list" subgroup="Events" typeTopicId="T:Gemstone.Data.DataUpdater" />
      <apidata name="DataUpdater" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:Gemstone.Data.BulkDataOperationBase.OverallProgressStatus" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.RowProgressStatus" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.SQLFailure" />
        <element api="E:Gemstone.Data.BulkDataOperationBase.TableProgressStatus" />
        <element api="E:Gemstone.Data.DataUpdater.Disposed" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.DataUpdater">
      <topicdata name="DataUpdater" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.DataUpdater" />
      <apidata name="DataUpdater" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallProgress" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.OverallTotal" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.TableCollection" />
        <element api="F:Gemstone.Data.BulkDataOperationBase.UseFromSchemaRi" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataUpdater.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.DataUpdater.#ctor" />
        <element api="M:Gemstone.Data.DataUpdater.#ctor(System.String,System.String)" />
        <element api="M:Gemstone.Data.DataUpdater.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataUpdater.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.DataUpdater.#ctor" />
      <sourceContext file="Gemstone.Data/DataUpdater.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataUpdater.#ctor(Gemstone.Data.Schema,Gemstone.Data.Schema)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.DataUpdater.#ctor" />
      <sourceContext file="Gemstone.Data/DataUpdater.cs" />
      <parameters>
        <parameter name="fromSchema">
          <type api="T:Gemstone.Data.Schema" ref="true" />
        </parameter>
        <parameter name="toSchema">
          <type api="T:Gemstone.Data.Schema" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataUpdater.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.DataUpdater.#ctor" />
      <sourceContext file="Gemstone.Data/DataUpdater.cs" />
      <parameters>
        <parameter name="fromConnectString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="toConnectString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataUpdater.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataUpdater.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gemstone.Data.BulkDataOperationBase.Close">
          <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Gemstone.Data.IBulkDataOperation.Close">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.DataUpdater.Disposed">
      <topicdata group="api" />
      <apidata name="Disposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataUpdater.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disposed" />
      <remover name="remove_Disposed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataUpdater.Execute">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/DataUpdater.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Gemstone.Data.BulkDataOperationBase.Execute">
          <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Gemstone.Data.IBulkDataOperation.Execute">
          <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.DataUpdater" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Field">
      <topicdata group="api" />
      <apidata name="Field" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IComparable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Field.#ctor(System.String,Gemstone.Data.OleDbType)" />
        <element api="P:Gemstone.Data.Field.AllowsNulls" />
        <element api="P:Gemstone.Data.Field.AutoIncrement" />
        <element api="P:Gemstone.Data.Field.AutoIncrementSeed" />
        <element api="P:Gemstone.Data.Field.AutoIncrementStep" />
        <element api="M:Gemstone.Data.Field.CompareTo(System.Object)" />
        <element api="P:Gemstone.Data.Field.DateTimePrecision" />
        <element api="P:Gemstone.Data.Field.DefaultValue" />
        <element api="P:Gemstone.Data.Field.Description" />
        <element api="P:Gemstone.Data.Field.ForeignKeys" />
        <element api="P:Gemstone.Data.Field.HasDefault" />
        <element api="P:Gemstone.Data.Field.IsForeignKey" />
        <element api="P:Gemstone.Data.Field.IsPrimaryKey" />
        <element api="P:Gemstone.Data.Field.MaxLength" />
        <element api="P:Gemstone.Data.Field.Name" />
        <element api="P:Gemstone.Data.Field.NonNullNativeValue" />
        <element api="P:Gemstone.Data.Field.NumericPrecision" />
        <element api="P:Gemstone.Data.Field.NumericScale" />
        <element api="P:Gemstone.Data.Field.Ordinal" />
        <element api="P:Gemstone.Data.Field.Parent" />
        <element api="P:Gemstone.Data.Field.PrimaryKeyName" />
        <element api="P:Gemstone.Data.Field.PrimaryKeyOrdinal" />
        <element api="P:Gemstone.Data.Field.ReadOnly" />
        <element api="P:Gemstone.Data.Field.ReferencedBy" />
        <element api="P:Gemstone.Data.Field.SQLEncodedValue" />
        <element api="P:Gemstone.Data.Field.SQLEscapedName" />
        <element api="P:Gemstone.Data.Field.Table" />
        <element api="P:Gemstone.Data.Field.Type" />
        <element api="P:Gemstone.Data.Field.Unique" />
        <element api="P:Gemstone.Data.Field.Value" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.Field">
      <topicdata name="Field" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Field" />
      <apidata name="Field" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Field.CompareTo(System.Object)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Field">
      <topicdata name="Field" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Field" />
      <apidata name="Field" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Gemstone.Data.Field.AllowsNulls" />
        <element api="P:Gemstone.Data.Field.AutoIncrement" />
        <element api="P:Gemstone.Data.Field.AutoIncrementSeed" />
        <element api="P:Gemstone.Data.Field.AutoIncrementStep" />
        <element api="P:Gemstone.Data.Field.DateTimePrecision" />
        <element api="P:Gemstone.Data.Field.DefaultValue" />
        <element api="P:Gemstone.Data.Field.Description" />
        <element api="P:Gemstone.Data.Field.ForeignKeys" />
        <element api="P:Gemstone.Data.Field.HasDefault" />
        <element api="P:Gemstone.Data.Field.IsForeignKey" />
        <element api="P:Gemstone.Data.Field.IsPrimaryKey" />
        <element api="P:Gemstone.Data.Field.MaxLength" />
        <element api="P:Gemstone.Data.Field.Name" />
        <element api="P:Gemstone.Data.Field.NonNullNativeValue" />
        <element api="P:Gemstone.Data.Field.NumericPrecision" />
        <element api="P:Gemstone.Data.Field.NumericScale" />
        <element api="P:Gemstone.Data.Field.Ordinal" />
        <element api="P:Gemstone.Data.Field.Parent" />
        <element api="P:Gemstone.Data.Field.PrimaryKeyName" />
        <element api="P:Gemstone.Data.Field.PrimaryKeyOrdinal" />
        <element api="P:Gemstone.Data.Field.ReadOnly" />
        <element api="P:Gemstone.Data.Field.ReferencedBy" />
        <element api="P:Gemstone.Data.Field.SQLEncodedValue" />
        <element api="P:Gemstone.Data.Field.SQLEscapedName" />
        <element api="P:Gemstone.Data.Field.Table" />
        <element api="P:Gemstone.Data.Field.Type" />
        <element api="P:Gemstone.Data.Field.Unique" />
        <element api="P:Gemstone.Data.Field.Value" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Field.#ctor(System.String,Gemstone.Data.OleDbType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:Gemstone.Data.OleDbType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.AllowsNulls">
      <topicdata group="api" />
      <apidata name="AllowsNulls" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllowsNulls" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.AutoIncrement">
      <topicdata group="api" />
      <apidata name="AutoIncrement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AutoIncrement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.AutoIncrementSeed">
      <topicdata group="api" />
      <apidata name="AutoIncrementSeed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AutoIncrementSeed" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.AutoIncrementStep">
      <topicdata group="api" />
      <apidata name="AutoIncrementStep" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AutoIncrementStep" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Field.CompareTo(System.Object)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.DateTimePrecision">
      <topicdata group="api" />
      <apidata name="DateTimePrecision" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DateTimePrecision" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.ForeignKeys">
      <topicdata group="api" />
      <apidata name="ForeignKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ForeignKeys" />
      <setter name="set_ForeignKeys" />
      <returns>
        <type api="T:Gemstone.Data.ForeignKeyFields" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.HasDefault">
      <topicdata group="api" />
      <apidata name="HasDefault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasDefault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.IsForeignKey">
      <topicdata group="api" />
      <apidata name="IsForeignKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsForeignKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.IsPrimaryKey">
      <topicdata group="api" />
      <apidata name="IsPrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsPrimaryKey" />
      <setter name="set_IsPrimaryKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.MaxLength">
      <topicdata group="api" />
      <apidata name="MaxLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaxLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.NonNullNativeValue">
      <topicdata group="api" />
      <apidata name="NonNullNativeValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NonNullNativeValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.NumericPrecision">
      <topicdata group="api" />
      <apidata name="NumericPrecision" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NumericPrecision" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.NumericScale">
      <topicdata group="api" />
      <apidata name="NumericScale" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NumericScale" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.Ordinal">
      <topicdata group="api" />
      <apidata name="Ordinal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Ordinal" />
      <setter name="set_Ordinal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.PrimaryKeyName">
      <topicdata group="api" />
      <apidata name="PrimaryKeyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryKeyName" />
      <setter name="set_PrimaryKeyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.PrimaryKeyOrdinal">
      <topicdata group="api" />
      <apidata name="PrimaryKeyOrdinal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryKeyOrdinal" />
      <setter name="set_PrimaryKeyOrdinal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.ReadOnly">
      <topicdata group="api" />
      <apidata name="ReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.ReferencedBy">
      <topicdata group="api" />
      <apidata name="ReferencedBy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReferencedBy" />
      <returns>
        <type api="T:Gemstone.Data.Field" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.SQLEncodedValue">
      <topicdata group="api" />
      <apidata name="SQLEncodedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SQLEncodedValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.SQLEscapedName">
      <topicdata group="api" />
      <apidata name="SQLEscapedName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SQLEscapedName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:Gemstone.Data.Table" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.Unique">
      <topicdata group="api" />
      <apidata name="Unique" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Unique" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Field.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Field" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Fields">
      <topicdata group="api" />
      <apidata name="Fields" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Data.Field" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Fields.Add(Gemstone.Data.Field)" />
        <element api="M:Gemstone.Data.Fields.Clear" />
        <element api="P:Gemstone.Data.Fields.Count" />
        <element api="M:Gemstone.Data.Fields.GetEnumerator" />
        <element api="M:Gemstone.Data.Fields.GetList(System.Boolean,System.Func{System.String,System.String})" />
        <element api="Overload:Gemstone.Data.Fields.Item">
          <element api="P:Gemstone.Data.Fields.Item(System.Int32)" />
          <element api="P:Gemstone.Data.Fields.Item(System.String)" />
        </element>
        <element api="P:Gemstone.Data.Fields.Parent" />
        <element api="M:Gemstone.Data.Fields.Remove(Gemstone.Data.Field)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.Fields">
      <topicdata name="Fields" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Fields" />
      <apidata name="Fields" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Fields.Add(Gemstone.Data.Field)" />
        <element api="M:Gemstone.Data.Fields.Clear" />
        <element api="M:Gemstone.Data.Fields.GetEnumerator" />
        <element api="M:Gemstone.Data.Fields.GetList(System.Boolean,System.Func{System.String,System.String})" />
        <element api="M:Gemstone.Data.Fields.Remove(Gemstone.Data.Field)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Fields">
      <topicdata name="Fields" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Fields" />
      <apidata name="Fields" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Gemstone.Data.Fields.Count" />
        <element api="Overload:Gemstone.Data.Fields.Item">
          <element api="P:Gemstone.Data.Fields.Item(System.Int32)" />
          <element api="P:Gemstone.Data.Fields.Item(System.String)" />
        </element>
        <element api="P:Gemstone.Data.Fields.Parent" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Fields.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:Gemstone.Data.Fields.Item(System.Int32)" />
        <element api="P:Gemstone.Data.Fields.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Fields.Add(Gemstone.Data.Field)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newField">
          <type api="T:Gemstone.Data.Field" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Fields.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Fields.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Fields.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Data.Field" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Data.Field" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Fields.GetList(System.Boolean,System.Func{System.String,System.String})">
      <topicdata group="api" />
      <apidata name="GetList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnAutoInc" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="sqlEscapeFunction" optional="true">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Fields.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Fields.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Field" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Fields.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Fields.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Field" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Fields.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:Gemstone.Data.Table" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Fields.Remove(Gemstone.Data.Field)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="field">
          <type api="T:Gemstone.Data.Field" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.ForeignKeyField">
      <topicdata group="api" />
      <apidata name="ForeignKeyField" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.ForeignKeyField.DeleteRule" />
        <element api="P:Gemstone.Data.ForeignKeyField.ForeignKey" />
        <element api="P:Gemstone.Data.ForeignKeyField.KeyName" />
        <element api="P:Gemstone.Data.ForeignKeyField.Ordinal" />
        <element api="P:Gemstone.Data.ForeignKeyField.Parent" />
        <element api="P:Gemstone.Data.ForeignKeyField.PrimaryKey" />
        <element api="P:Gemstone.Data.ForeignKeyField.UpdateRule" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.ForeignKeyField">
      <topicdata name="ForeignKeyField" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.ForeignKeyField" />
      <apidata name="ForeignKeyField" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyField" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.ForeignKeyField">
      <topicdata name="ForeignKeyField" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.ForeignKeyField" />
      <apidata name="ForeignKeyField" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Gemstone.Data.ForeignKeyField.DeleteRule" />
        <element api="P:Gemstone.Data.ForeignKeyField.ForeignKey" />
        <element api="P:Gemstone.Data.ForeignKeyField.KeyName" />
        <element api="P:Gemstone.Data.ForeignKeyField.Ordinal" />
        <element api="P:Gemstone.Data.ForeignKeyField.Parent" />
        <element api="P:Gemstone.Data.ForeignKeyField.PrimaryKey" />
        <element api="P:Gemstone.Data.ForeignKeyField.UpdateRule" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyField" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyField.DeleteRule">
      <topicdata group="api" />
      <apidata name="DeleteRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeleteRule" />
      <setter name="set_DeleteRule" />
      <returns>
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyField" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyField.ForeignKey">
      <topicdata group="api" />
      <apidata name="ForeignKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ForeignKey" />
      <setter name="set_ForeignKey" />
      <returns>
        <type api="T:Gemstone.Data.Field" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyField" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyField.KeyName">
      <topicdata group="api" />
      <apidata name="KeyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyName" />
      <setter name="set_KeyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyField" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyField.Ordinal">
      <topicdata group="api" />
      <apidata name="Ordinal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Ordinal" />
      <setter name="set_Ordinal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyField" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyField.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:Gemstone.Data.ForeignKeyFields" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyField" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyField.PrimaryKey">
      <topicdata group="api" />
      <apidata name="PrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryKey" />
      <setter name="set_PrimaryKey" />
      <returns>
        <type api="T:Gemstone.Data.Field" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyField" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyField.UpdateRule">
      <topicdata group="api" />
      <apidata name="UpdateRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateRule" />
      <setter name="set_UpdateRule" />
      <returns>
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyField" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.ForeignKeyFields">
      <topicdata group="api" />
      <apidata name="ForeignKeyFields" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.ForeignKeyFields.Count" />
        <element api="M:Gemstone.Data.ForeignKeyFields.GetEnumerator" />
        <element api="M:Gemstone.Data.ForeignKeyFields.GetList" />
        <element api="Overload:Gemstone.Data.ForeignKeyFields.Item">
          <element api="P:Gemstone.Data.ForeignKeyFields.Item(System.Int32)" />
          <element api="P:Gemstone.Data.ForeignKeyFields.Item(System.String)" />
        </element>
        <element api="P:Gemstone.Data.ForeignKeyFields.Parent" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.ForeignKeyFields">
      <topicdata name="ForeignKeyFields" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.ForeignKeyFields" />
      <apidata name="ForeignKeyFields" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.ForeignKeyFields.GetEnumerator" />
        <element api="M:Gemstone.Data.ForeignKeyFields.GetList" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyFields" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.ForeignKeyFields">
      <topicdata name="ForeignKeyFields" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.ForeignKeyFields" />
      <apidata name="ForeignKeyFields" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Gemstone.Data.ForeignKeyFields.Count" />
        <element api="Overload:Gemstone.Data.ForeignKeyFields.Item">
          <element api="P:Gemstone.Data.ForeignKeyFields.Item(System.Int32)" />
          <element api="P:Gemstone.Data.ForeignKeyFields.Item(System.String)" />
        </element>
        <element api="P:Gemstone.Data.ForeignKeyFields.Parent" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyFields" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.ForeignKeyFields.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:Gemstone.Data.ForeignKeyFields.Item(System.Int32)" />
        <element api="P:Gemstone.Data.ForeignKeyFields.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyFields" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyFields.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyFields" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.ForeignKeyFields.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyFields" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.ForeignKeyFields.GetList">
      <topicdata group="api" />
      <apidata name="GetList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyFields" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyFields.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.ForeignKeyFields.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.ForeignKeyField" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyFields" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyFields.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.ForeignKeyFields.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.ForeignKeyField" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyFields" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.ForeignKeyFields.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:Gemstone.Data.Field" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ForeignKeyFields" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.IBulkDataOperation">
      <topicdata group="api" />
      <apidata name="IBulkDataOperation" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Gemstone.Data.BulkDataOperationBase" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gemstone.Data.IBulkDataOperation.Close" />
        <element api="M:Gemstone.Data.IBulkDataOperation.Execute" />
        <element api="P:Gemstone.Data.IBulkDataOperation.FromSchema" />
        <element api="E:Gemstone.Data.IBulkDataOperation.OverallProgressStatus" />
        <element api="E:Gemstone.Data.IBulkDataOperation.RowProgressStatus" />
        <element api="P:Gemstone.Data.IBulkDataOperation.RowReportInterval" />
        <element api="E:Gemstone.Data.IBulkDataOperation.SQLFailure" />
        <element api="E:Gemstone.Data.IBulkDataOperation.TableProgressStatus" />
        <element api="P:Gemstone.Data.IBulkDataOperation.Timeout" />
        <element api="P:Gemstone.Data.IBulkDataOperation.ToSchema" />
        <element api="P:Gemstone.Data.IBulkDataOperation.WorkTables" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.IBulkDataOperation">
      <topicdata name="IBulkDataOperation" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.IBulkDataOperation" />
      <apidata name="IBulkDataOperation" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Gemstone.Data.IBulkDataOperation.Close" />
        <element api="M:Gemstone.Data.IBulkDataOperation.Execute" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.IBulkDataOperation">
      <topicdata name="IBulkDataOperation" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.IBulkDataOperation" />
      <apidata name="IBulkDataOperation" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Gemstone.Data.IBulkDataOperation.FromSchema" />
        <element api="P:Gemstone.Data.IBulkDataOperation.RowReportInterval" />
        <element api="P:Gemstone.Data.IBulkDataOperation.Timeout" />
        <element api="P:Gemstone.Data.IBulkDataOperation.ToSchema" />
        <element api="P:Gemstone.Data.IBulkDataOperation.WorkTables" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" />
      </containers>
    </api>
    <api id="Events.T:Gemstone.Data.IBulkDataOperation">
      <topicdata name="IBulkDataOperation" group="list" subgroup="Events" typeTopicId="T:Gemstone.Data.IBulkDataOperation" />
      <apidata name="IBulkDataOperation" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:Gemstone.Data.IBulkDataOperation.OverallProgressStatus" />
        <element api="E:Gemstone.Data.IBulkDataOperation.RowProgressStatus" />
        <element api="E:Gemstone.Data.IBulkDataOperation.SQLFailure" />
        <element api="E:Gemstone.Data.IBulkDataOperation.TableProgressStatus" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.IBulkDataOperation.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.IBulkDataOperation.Execute">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.IBulkDataOperation.FromSchema">
      <topicdata group="api" />
      <apidata name="FromSchema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_FromSchema" />
      <setter name="set_FromSchema" />
      <returns>
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.IBulkDataOperation.OverallProgressStatus">
      <topicdata group="api" />
      <apidata name="OverallProgressStatus" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_OverallProgressStatus" />
      <remover name="remove_OverallProgressStatus" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.IBulkDataOperation.RowProgressStatus">
      <topicdata group="api" />
      <apidata name="RowProgressStatus" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowProgressStatus" />
      <remover name="remove_RowProgressStatus" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.IBulkDataOperation.RowReportInterval">
      <topicdata group="api" />
      <apidata name="RowReportInterval" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RowReportInterval" />
      <setter name="set_RowReportInterval" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.IBulkDataOperation.SQLFailure">
      <topicdata group="api" />
      <apidata name="SQLFailure" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_SQLFailure" />
      <remover name="remove_SQLFailure" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="E:Gemstone.Data.IBulkDataOperation.TableProgressStatus">
      <topicdata group="api" />
      <apidata name="TableProgressStatus" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_TableProgressStatus" />
      <remover name="remove_TableProgressStatus" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.IBulkDataOperation.Timeout">
      <topicdata group="api" />
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.IBulkDataOperation.ToSchema">
      <topicdata group="api" />
      <apidata name="ToSchema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ToSchema" />
      <setter name="set_ToSchema" />
      <returns>
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.IBulkDataOperation.WorkTables">
      <topicdata group="api" />
      <apidata name="WorkTables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_WorkTables" />
      <returns>
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.IBulkDataOperation" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.OleDbType">
      <topicdata group="api" />
      <apidata name="OleDbType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.OleDbType.Empty" />
        <element api="F:Gemstone.Data.OleDbType.SmallInt" />
        <element api="F:Gemstone.Data.OleDbType.Integer" />
        <element api="F:Gemstone.Data.OleDbType.Single" />
        <element api="F:Gemstone.Data.OleDbType.Double" />
        <element api="F:Gemstone.Data.OleDbType.Currency" />
        <element api="F:Gemstone.Data.OleDbType.Date" />
        <element api="F:Gemstone.Data.OleDbType.BSTR" />
        <element api="F:Gemstone.Data.OleDbType.IDispatch" />
        <element api="F:Gemstone.Data.OleDbType.Error" />
        <element api="F:Gemstone.Data.OleDbType.Boolean" />
        <element api="F:Gemstone.Data.OleDbType.Variant" />
        <element api="F:Gemstone.Data.OleDbType.IUnknown" />
        <element api="F:Gemstone.Data.OleDbType.Decimal" />
        <element api="F:Gemstone.Data.OleDbType.TinyInt" />
        <element api="F:Gemstone.Data.OleDbType.UnsignedTinyInt" />
        <element api="F:Gemstone.Data.OleDbType.UnsignedSmallInt" />
        <element api="F:Gemstone.Data.OleDbType.UnsignedInt" />
        <element api="F:Gemstone.Data.OleDbType.BigInt" />
        <element api="F:Gemstone.Data.OleDbType.UnsignedBigInt" />
        <element api="F:Gemstone.Data.OleDbType.Filetime" />
        <element api="F:Gemstone.Data.OleDbType.Guid" />
        <element api="F:Gemstone.Data.OleDbType.Binary" />
        <element api="F:Gemstone.Data.OleDbType.Char" />
        <element api="F:Gemstone.Data.OleDbType.WChar" />
        <element api="F:Gemstone.Data.OleDbType.Numeric" />
        <element api="F:Gemstone.Data.OleDbType.DBDate" />
        <element api="F:Gemstone.Data.OleDbType.DBTime" />
        <element api="F:Gemstone.Data.OleDbType.DBTimeStamp" />
        <element api="F:Gemstone.Data.OleDbType.PropVariant" />
        <element api="F:Gemstone.Data.OleDbType.VarNumeric" />
        <element api="F:Gemstone.Data.OleDbType.VarChar" />
        <element api="F:Gemstone.Data.OleDbType.LongVarChar" />
        <element api="F:Gemstone.Data.OleDbType.VarWChar" />
        <element api="F:Gemstone.Data.OleDbType.LongVarWChar" />
        <element api="F:Gemstone.Data.OleDbType.VarBinary" />
        <element api="F:Gemstone.Data.OleDbType.LongVarBinary" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.BigInt">
      <topicdata group="api" notopic="" />
      <apidata name="BigInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Binary">
      <topicdata group="api" notopic="" />
      <apidata name="Binary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Boolean">
      <topicdata group="api" notopic="" />
      <apidata name="Boolean" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.BSTR">
      <topicdata group="api" notopic="" />
      <apidata name="BSTR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Char">
      <topicdata group="api" notopic="" />
      <apidata name="Char" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>129</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Currency">
      <topicdata group="api" notopic="" />
      <apidata name="Currency" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Date">
      <topicdata group="api" notopic="" />
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.DBDate">
      <topicdata group="api" notopic="" />
      <apidata name="DBDate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>133</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.DBTime">
      <topicdata group="api" notopic="" />
      <apidata name="DBTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>134</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.DBTimeStamp">
      <topicdata group="api" notopic="" />
      <apidata name="DBTimeStamp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>135</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Decimal">
      <topicdata group="api" notopic="" />
      <apidata name="Decimal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Double">
      <topicdata group="api" notopic="" />
      <apidata name="Double" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Empty">
      <topicdata group="api" notopic="" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Filetime">
      <topicdata group="api" notopic="" />
      <apidata name="Filetime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Guid">
      <topicdata group="api" notopic="" />
      <apidata name="Guid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>72</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.IDispatch">
      <topicdata group="api" notopic="" />
      <apidata name="IDispatch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Integer">
      <topicdata group="api" notopic="" />
      <apidata name="Integer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.IUnknown">
      <topicdata group="api" notopic="" />
      <apidata name="IUnknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.LongVarBinary">
      <topicdata group="api" notopic="" />
      <apidata name="LongVarBinary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>205</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.LongVarChar">
      <topicdata group="api" notopic="" />
      <apidata name="LongVarChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>201</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.LongVarWChar">
      <topicdata group="api" notopic="" />
      <apidata name="LongVarWChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>203</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Numeric">
      <topicdata group="api" notopic="" />
      <apidata name="Numeric" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>131</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.PropVariant">
      <topicdata group="api" notopic="" />
      <apidata name="PropVariant" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>138</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Single">
      <topicdata group="api" notopic="" />
      <apidata name="Single" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.SmallInt">
      <topicdata group="api" notopic="" />
      <apidata name="SmallInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.TinyInt">
      <topicdata group="api" notopic="" />
      <apidata name="TinyInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.UnsignedBigInt">
      <topicdata group="api" notopic="" />
      <apidata name="UnsignedBigInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.UnsignedInt">
      <topicdata group="api" notopic="" />
      <apidata name="UnsignedInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.UnsignedSmallInt">
      <topicdata group="api" notopic="" />
      <apidata name="UnsignedSmallInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.UnsignedTinyInt">
      <topicdata group="api" notopic="" />
      <apidata name="UnsignedTinyInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.VarBinary">
      <topicdata group="api" notopic="" />
      <apidata name="VarBinary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>204</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.VarChar">
      <topicdata group="api" notopic="" />
      <apidata name="VarChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>200</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.Variant">
      <topicdata group="api" notopic="" />
      <apidata name="Variant" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.VarNumeric">
      <topicdata group="api" notopic="" />
      <apidata name="VarNumeric" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>139</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.VarWChar">
      <topicdata group="api" notopic="" />
      <apidata name="VarWChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>202</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.OleDbType.WChar">
      <topicdata group="api" notopic="" />
      <apidata name="WChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </returns>
      <value>130</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.OleDbType" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.ReferentialAction">
      <topicdata group="api" />
      <apidata name="ReferentialAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:Gemstone.Data.ReferentialAction.Cascade" />
        <element api="F:Gemstone.Data.ReferentialAction.SetNull" />
        <element api="F:Gemstone.Data.ReferentialAction.SetDefault" />
        <element api="F:Gemstone.Data.ReferentialAction.NoAction" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.ReferentialAction.Cascade">
      <topicdata group="api" notopic="" />
      <apidata name="Cascade" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.ReferentialAction.NoAction">
      <topicdata group="api" notopic="" />
      <apidata name="NoAction" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.ReferentialAction.SetDefault">
      <topicdata group="api" notopic="" />
      <apidata name="SetDefault" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.ReferentialAction.SetNull">
      <topicdata group="api" notopic="" />
      <apidata name="SetNull" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Schema.#ctor">
          <element api="M:Gemstone.Data.Schema.#ctor" />
          <element api="M:Gemstone.Data.Schema.#ctor(System.String,Gemstone.Data.TableType,System.Boolean,System.Boolean)" />
        </element>
        <element api="P:Gemstone.Data.Schema.AllowNumericNulls" />
        <element api="P:Gemstone.Data.Schema.AllowTextNulls" />
        <element api="M:Gemstone.Data.Schema.Analyze" />
        <element api="M:Gemstone.Data.Schema.Close" />
        <element api="P:Gemstone.Data.Schema.Connection" />
        <element api="P:Gemstone.Data.Schema.ConnectionString" />
        <element api="P:Gemstone.Data.Schema.DataSourceType" />
        <element api="P:Gemstone.Data.Schema.ImmediateClose" />
        <element api="F:Gemstone.Data.Schema.NoRestriction" />
        <element api="Overload:Gemstone.Data.Schema.OpenConnection">
          <element api="M:Gemstone.Data.Schema.OpenConnection(System.String)" />
          <element api="M:Gemstone.Data.Schema.OpenConnection(System.String,Gemstone.Data.DatabaseType@,Gemstone.Data.Schema@,System.Boolean@)" />
        </element>
        <element api="M:Gemstone.Data.Schema.SQLEscapeName(System.String)" />
        <element api="P:Gemstone.Data.Schema.Tables" />
        <element api="P:Gemstone.Data.Schema.TableTypeRestriction" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.Schema">
      <topicdata name="Schema" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Schema" />
      <apidata name="Schema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Schema.Analyze" />
        <element api="M:Gemstone.Data.Schema.Close" />
        <element api="Overload:Gemstone.Data.Schema.OpenConnection">
          <element api="M:Gemstone.Data.Schema.OpenConnection(System.String)" />
          <element api="M:Gemstone.Data.Schema.OpenConnection(System.String,Gemstone.Data.DatabaseType@,Gemstone.Data.Schema@,System.Boolean@)" />
        </element>
        <element api="M:Gemstone.Data.Schema.SQLEscapeName(System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Schema">
      <topicdata name="Schema" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Schema" />
      <apidata name="Schema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Gemstone.Data.Schema.AllowNumericNulls" />
        <element api="P:Gemstone.Data.Schema.AllowTextNulls" />
        <element api="P:Gemstone.Data.Schema.Connection" />
        <element api="P:Gemstone.Data.Schema.ConnectionString" />
        <element api="P:Gemstone.Data.Schema.DataSourceType" />
        <element api="P:Gemstone.Data.Schema.ImmediateClose" />
        <element api="P:Gemstone.Data.Schema.Tables" />
        <element api="P:Gemstone.Data.Schema.TableTypeRestriction" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.Schema">
      <topicdata name="Schema" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.Schema" />
      <apidata name="Schema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="F:Gemstone.Data.Schema.NoRestriction" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Schema.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.Schema.#ctor" />
        <element api="M:Gemstone.Data.Schema.#ctor(System.String,Gemstone.Data.TableType,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Schema.OpenConnection">
      <topicdata name="OpenConnection" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="OpenConnection" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Schema.OpenConnection(System.String)" />
        <element api="M:Gemstone.Data.Schema.OpenConnection(System.String,Gemstone.Data.DatabaseType@,Gemstone.Data.Schema@,System.Boolean@)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Schema.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Schema.#ctor" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Schema.#ctor(System.String,Gemstone.Data.TableType,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Schema.#ctor" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <parameters>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableTypeRestriction" optional="true">
          <type api="T:Gemstone.Data.TableType" ref="false" />
          <argument>
            <type api="T:Gemstone.Data.TableType" ref="false" />
            <enumValue>
              <field name="Table" />
              <field name="View" />
              <field name="SystemTable" />
              <field name="SystemView" />
              <field name="Alias" />
              <field name="Synonym" />
              <field name="GlobalTemp" />
              <field name="LocalTemp" />
              <field name="Link" />
              <field name="Undetermined" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="immediateClose" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="analyzeNow" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Schema.AllowNumericNulls">
      <topicdata group="api" />
      <apidata name="AllowNumericNulls" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowNumericNulls" />
      <setter name="set_AllowNumericNulls" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Schema.AllowTextNulls">
      <topicdata group="api" />
      <apidata name="AllowTextNulls" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowTextNulls" />
      <setter name="set_AllowTextNulls" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Schema.Analyze">
      <topicdata group="api" />
      <apidata name="Analyze" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Schema.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Schema.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Connection" />
      <setter name="set_Connection" />
      <returns>
        <type api="T:System.Data.IDbConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Schema.ConnectionString">
      <topicdata group="api" />
      <apidata name="ConnectionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionString" />
      <setter name="set_ConnectionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Schema.DataSourceType">
      <topicdata group="api" />
      <apidata name="DataSourceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataSourceType" />
      <setter name="set_DataSourceType" />
      <returns>
        <type api="T:Gemstone.Data.DatabaseType" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Schema.ImmediateClose">
      <topicdata group="api" />
      <apidata name="ImmediateClose" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ImmediateClose" />
      <setter name="set_ImmediateClose" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Schema.NoRestriction">
      <topicdata group="api" />
      <apidata name="NoRestriction" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <enumValue>
        <field name="Table" />
        <field name="View" />
        <field name="SystemTable" />
        <field name="SystemView" />
        <field name="Alias" />
        <field name="Synonym" />
        <field name="GlobalTemp" />
        <field name="LocalTemp" />
        <field name="Link" />
        <field name="Undetermined" />
      </enumValue>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Schema.OpenConnection(System.String)">
      <topicdata group="api" />
      <apidata name="OpenConnection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.Schema.OpenConnection" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDbConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Schema.OpenConnection(System.String,Gemstone.Data.DatabaseType@,Gemstone.Data.Schema@,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="OpenConnection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.Schema.OpenConnection" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="databaseType" out="true">
          <referenceTo>
            <type api="T:Gemstone.Data.DatabaseType" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="deserializedSchema" out="true">
          <referenceTo>
            <type api="T:Gemstone.Data.Schema" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="isAdoConnection" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDbConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Schema.SQLEscapeName(System.String)">
      <topicdata group="api" />
      <apidata name="SQLEscapeName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Schema.Tables">
      <topicdata group="api" />
      <apidata name="Tables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Tables" />
      <setter name="set_Tables" />
      <returns>
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Schema.TableTypeRestriction">
      <topicdata group="api" />
      <apidata name="TableTypeRestriction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Schema.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TableTypeRestriction" />
      <setter name="set_TableTypeRestriction" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Table">
      <topicdata group="api" />
      <apidata name="Table" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Data.Table" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Table.#ctor">
          <element api="M:Gemstone.Data.Table.#ctor" />
          <element api="M:Gemstone.Data.Table.#ctor(System.String)" />
          <element api="M:Gemstone.Data.Table.#ctor(System.String,System.String,System.String,System.String,System.String,System.Int32)" />
        </element>
        <element api="P:Gemstone.Data.Table.AutoIncField" />
        <element api="M:Gemstone.Data.Table.CalculateRowCount" />
        <element api="P:Gemstone.Data.Table.Catalog" />
        <element api="Overload:Gemstone.Data.Table.CompareTo">
          <element api="M:Gemstone.Data.Table.CompareTo(System.Object)" />
          <element api="M:Gemstone.Data.Table.CompareTo(Gemstone.Data.Table)" />
        </element>
        <element api="P:Gemstone.Data.Table.Connection" />
        <element api="M:Gemstone.Data.Table.DefineForeignKey(System.String,System.String,System.String,System.Int32,System.String,Gemstone.Data.ReferentialAction,Gemstone.Data.ReferentialAction)" />
        <element api="M:Gemstone.Data.Table.DefinePrimaryKey(System.String,System.Int32,System.String)" />
        <element api="P:Gemstone.Data.Table.Description" />
        <element api="P:Gemstone.Data.Table.Fields" />
        <element api="P:Gemstone.Data.Table.FullName" />
        <element api="P:Gemstone.Data.Table.HasAutoIncField" />
        <element api="P:Gemstone.Data.Table.IdentitySQL" />
        <element api="P:Gemstone.Data.Table.IsForeignKeyTable" />
        <element api="P:Gemstone.Data.Table.IsLinked" />
        <element api="M:Gemstone.Data.Table.IsReferencedBy(Gemstone.Data.Table)" />
        <element api="M:Gemstone.Data.Table.IsReferencedVia(Gemstone.Data.Table)" />
        <element api="P:Gemstone.Data.Table.IsSystem" />
        <element api="P:Gemstone.Data.Table.IsTemporary" />
        <element api="P:Gemstone.Data.Table.IsView" />
        <element api="P:Gemstone.Data.Table.MapName" />
        <element api="P:Gemstone.Data.Table.Name" />
        <element api="P:Gemstone.Data.Table.Parent" />
        <element api="P:Gemstone.Data.Table.PrimaryKeyFieldCount" />
        <element api="P:Gemstone.Data.Table.Priority" />
        <element api="P:Gemstone.Data.Table.Process" />
        <element api="M:Gemstone.Data.Table.ReevalulateIdentitySQL" />
        <element api="P:Gemstone.Data.Table.ReferencedByForeignKeys" />
        <element api="P:Gemstone.Data.Table.RowCount" />
        <element api="P:Gemstone.Data.Table.Schema" />
        <element api="P:Gemstone.Data.Table.SQLEscapedName" />
        <element api="M:Gemstone.Data.Table.ToString" />
        <element api="P:Gemstone.Data.Table.Type" />
        <element api="M:Gemstone.Data.Table.UsesDefaultSchema" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.Table">
      <topicdata name="Table" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Table" />
      <apidata name="Table" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Table.CalculateRowCount" />
        <element api="Overload:Gemstone.Data.Table.CompareTo">
          <element api="M:Gemstone.Data.Table.CompareTo(System.Object)" />
          <element api="M:Gemstone.Data.Table.CompareTo(Gemstone.Data.Table)" />
        </element>
        <element api="M:Gemstone.Data.Table.DefineForeignKey(System.String,System.String,System.String,System.Int32,System.String,Gemstone.Data.ReferentialAction,Gemstone.Data.ReferentialAction)" />
        <element api="M:Gemstone.Data.Table.DefinePrimaryKey(System.String,System.Int32,System.String)" />
        <element api="M:Gemstone.Data.Table.IsReferencedBy(Gemstone.Data.Table)" />
        <element api="M:Gemstone.Data.Table.IsReferencedVia(Gemstone.Data.Table)" />
        <element api="M:Gemstone.Data.Table.ReevalulateIdentitySQL" />
        <element api="M:Gemstone.Data.Table.ToString" />
        <element api="M:Gemstone.Data.Table.UsesDefaultSchema" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Table">
      <topicdata name="Table" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Table" />
      <apidata name="Table" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Gemstone.Data.Table.AutoIncField" />
        <element api="P:Gemstone.Data.Table.Catalog" />
        <element api="P:Gemstone.Data.Table.Connection" />
        <element api="P:Gemstone.Data.Table.Description" />
        <element api="P:Gemstone.Data.Table.Fields" />
        <element api="P:Gemstone.Data.Table.FullName" />
        <element api="P:Gemstone.Data.Table.HasAutoIncField" />
        <element api="P:Gemstone.Data.Table.IdentitySQL" />
        <element api="P:Gemstone.Data.Table.IsForeignKeyTable" />
        <element api="P:Gemstone.Data.Table.IsLinked" />
        <element api="P:Gemstone.Data.Table.IsSystem" />
        <element api="P:Gemstone.Data.Table.IsTemporary" />
        <element api="P:Gemstone.Data.Table.IsView" />
        <element api="P:Gemstone.Data.Table.MapName" />
        <element api="P:Gemstone.Data.Table.Name" />
        <element api="P:Gemstone.Data.Table.Parent" />
        <element api="P:Gemstone.Data.Table.PrimaryKeyFieldCount" />
        <element api="P:Gemstone.Data.Table.Priority" />
        <element api="P:Gemstone.Data.Table.Process" />
        <element api="P:Gemstone.Data.Table.ReferencedByForeignKeys" />
        <element api="P:Gemstone.Data.Table.RowCount" />
        <element api="P:Gemstone.Data.Table.Schema" />
        <element api="P:Gemstone.Data.Table.SQLEscapedName" />
        <element api="P:Gemstone.Data.Table.Type" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Table.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.Table.#ctor" />
        <element api="M:Gemstone.Data.Table.#ctor(System.String)" />
        <element api="M:Gemstone.Data.Table.#ctor(System.String,System.String,System.String,System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Table.CompareTo">
      <topicdata name="CompareTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Table.CompareTo(System.Object)" />
        <element api="M:Gemstone.Data.Table.CompareTo(Gemstone.Data.Table)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Table.#ctor" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Table.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.#ctor(System.String,System.String,System.String,System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Table.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schema">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.AutoIncField">
      <topicdata group="api" />
      <apidata name="AutoIncField" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AutoIncField" />
      <returns>
        <type api="T:Gemstone.Data.Field" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.CalculateRowCount">
      <topicdata group="api" />
      <apidata name="CalculateRowCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Catalog">
      <topicdata group="api" />
      <apidata name="Catalog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Catalog" />
      <setter name="set_Catalog" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.CompareTo(Gemstone.Data.Table)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Table.CompareTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Gemstone.Data.Table" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Data.Table" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.CompareTo(System.Object)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Table.CompareTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Connection" />
      <returns>
        <type api="T:System.Data.IDbConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.DefineForeignKey(System.String,System.String,System.String,System.Int32,System.String,Gemstone.Data.ReferentialAction,Gemstone.Data.ReferentialAction)">
      <topicdata group="api" />
      <apidata name="DefineForeignKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="primaryKeyFieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="foreignKeyTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="foreignKeyFieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="foreignKeyOrdinal" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
        <parameter name="foreignKeyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="foreignKeyUpdateRule" optional="true">
          <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
          <argument>
            <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
            <enumValue>
              <field name="NoAction" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="foreignKeyDeleteRule" optional="true">
          <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
          <argument>
            <type api="T:Gemstone.Data.ReferentialAction" ref="false" />
            <enumValue>
              <field name="NoAction" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.DefinePrimaryKey(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="DefinePrimaryKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="primaryKeyOrdinal" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
        <parameter name="primaryKeyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Fields">
      <topicdata group="api" />
      <apidata name="Fields" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Fields" />
      <setter name="set_Fields" />
      <returns>
        <type api="T:Gemstone.Data.Fields" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.FullName">
      <topicdata group="api" />
      <apidata name="FullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.HasAutoIncField">
      <topicdata group="api" />
      <apidata name="HasAutoIncField" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasAutoIncField" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.IdentitySQL">
      <topicdata group="api" />
      <apidata name="IdentitySQL" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IdentitySQL" />
      <setter name="set_IdentitySQL" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.IsForeignKeyTable">
      <topicdata group="api" />
      <apidata name="IsForeignKeyTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsForeignKeyTable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.IsLinked">
      <topicdata group="api" />
      <apidata name="IsLinked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLinked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.IsReferencedBy(Gemstone.Data.Table)">
      <topicdata group="api" />
      <apidata name="IsReferencedBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="otherTable">
          <type api="T:Gemstone.Data.Table" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.IsReferencedVia(Gemstone.Data.Table)">
      <topicdata group="api" />
      <apidata name="IsReferencedVia" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="otherTable">
          <type api="T:Gemstone.Data.Table" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.IsSystem">
      <topicdata group="api" />
      <apidata name="IsSystem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSystem" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.IsTemporary">
      <topicdata group="api" />
      <apidata name="IsTemporary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsTemporary" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.IsView">
      <topicdata group="api" />
      <apidata name="IsView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsView" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.MapName">
      <topicdata group="api" />
      <apidata name="MapName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MapName" />
      <setter name="set_MapName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.PrimaryKeyFieldCount">
      <topicdata group="api" />
      <apidata name="PrimaryKeyFieldCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrimaryKeyFieldCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Priority">
      <topicdata group="api" />
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Priority" />
      <setter name="set_Priority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Process">
      <topicdata group="api" />
      <apidata name="Process" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Process" />
      <setter name="set_Process" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.ReevalulateIdentitySQL">
      <topicdata group="api" />
      <apidata name="ReevalulateIdentitySQL" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.ReferencedByForeignKeys">
      <topicdata group="api" />
      <apidata name="ReferencedByForeignKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReferencedByForeignKeys" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.RowCount">
      <topicdata group="api" />
      <apidata name="RowCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RowCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Schema" />
      <setter name="set_Schema" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.SQLEscapedName">
      <topicdata group="api" />
      <apidata name="SQLEscapedName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SQLEscapedName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Table.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Table.UsesDefaultSchema">
      <topicdata group="api" />
      <apidata name="UsesDefaultSchema" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Table" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Tables">
      <topicdata group="api" />
      <apidata name="Tables" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Data.Table" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Tables.Add(Gemstone.Data.Table)" />
        <element api="M:Gemstone.Data.Tables.Clear" />
        <element api="P:Gemstone.Data.Tables.Count" />
        <element api="M:Gemstone.Data.Tables.FindByMapName(System.String)" />
        <element api="M:Gemstone.Data.Tables.GetEnumerator" />
        <element api="M:Gemstone.Data.Tables.GetList" />
        <element api="Overload:Gemstone.Data.Tables.Item">
          <element api="P:Gemstone.Data.Tables.Item(System.Int32)" />
          <element api="P:Gemstone.Data.Tables.Item(System.String)" />
        </element>
        <element api="P:Gemstone.Data.Tables.Parent" />
        <element api="M:Gemstone.Data.Tables.Remove(Gemstone.Data.Table)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.Tables">
      <topicdata name="Tables" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Tables" />
      <apidata name="Tables" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Tables.Add(Gemstone.Data.Table)" />
        <element api="M:Gemstone.Data.Tables.Clear" />
        <element api="M:Gemstone.Data.Tables.FindByMapName(System.String)" />
        <element api="M:Gemstone.Data.Tables.GetEnumerator" />
        <element api="M:Gemstone.Data.Tables.GetList" />
        <element api="M:Gemstone.Data.Tables.Remove(Gemstone.Data.Table)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Tables">
      <topicdata name="Tables" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Tables" />
      <apidata name="Tables" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Gemstone.Data.Tables.Count" />
        <element api="Overload:Gemstone.Data.Tables.Item">
          <element api="P:Gemstone.Data.Tables.Item(System.Int32)" />
          <element api="P:Gemstone.Data.Tables.Item(System.String)" />
        </element>
        <element api="P:Gemstone.Data.Tables.Parent" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Tables.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:Gemstone.Data.Tables.Item(System.Int32)" />
        <element api="P:Gemstone.Data.Tables.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Tables.Add(Gemstone.Data.Table)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:Gemstone.Data.Table" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Tables.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Tables.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Tables.FindByMapName(System.String)">
      <topicdata group="api" />
      <apidata name="FindByMapName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mapName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Table" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Tables.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Data.Table" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Data.Table" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Tables.GetList">
      <topicdata group="api" />
      <apidata name="GetList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Tables.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Tables.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Table" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Tables.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Tables.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Table" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Tables.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:Gemstone.Data.Schema" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Tables.Remove(Gemstone.Data.Table)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:Gemstone.Data.Table" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Tables.ReferentialOrderComparer">
      <topicdata group="api" />
      <apidata name="ReferentialOrderComparer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IComparer`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Data.Table" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Tables.ReferentialOrderComparer.#ctor" />
        <element api="M:Gemstone.Data.Tables.ReferentialOrderComparer.Compare(Gemstone.Data.Table,Gemstone.Data.Table)" />
        <element api="F:Gemstone.Data.Tables.ReferentialOrderComparer.Default" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.Tables.ReferentialOrderComparer">
      <topicdata name="ReferentialOrderComparer" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Tables.ReferentialOrderComparer" />
      <apidata name="ReferentialOrderComparer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Tables.ReferentialOrderComparer.Compare(Gemstone.Data.Table,Gemstone.Data.Table)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables.ReferentialOrderComparer" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.Tables.ReferentialOrderComparer">
      <topicdata name="ReferentialOrderComparer" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.Tables.ReferentialOrderComparer" />
      <apidata name="ReferentialOrderComparer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.Tables.ReferentialOrderComparer.Default" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables.ReferentialOrderComparer" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Tables.ReferentialOrderComparer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables.ReferentialOrderComparer" ref="true">
          <type api="T:Gemstone.Data.Tables" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:Gemstone.Data.Tables.ReferentialOrderComparer.Compare(Gemstone.Data.Table,Gemstone.Data.Table)">
      <topicdata group="api" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="table1">
          <type api="T:Gemstone.Data.Table" ref="true" />
        </parameter>
        <parameter name="table2">
          <type api="T:Gemstone.Data.Table" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Data.Table" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables.ReferentialOrderComparer" ref="true">
          <type api="T:Gemstone.Data.Tables" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:Gemstone.Data.Tables.ReferentialOrderComparer.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Tables.ReferentialOrderComparer" ref="true">
          <type api="T:Gemstone.Data.Tables" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.Tables.ReferentialOrderComparer" ref="true">
          <type api="T:Gemstone.Data.Tables" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:Gemstone.Data.TableType">
      <topicdata group="api" />
      <apidata name="TableType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:Gemstone.Data.TableType.Table" />
        <element api="F:Gemstone.Data.TableType.View" />
        <element api="F:Gemstone.Data.TableType.SystemTable" />
        <element api="F:Gemstone.Data.TableType.SystemView" />
        <element api="F:Gemstone.Data.TableType.Alias" />
        <element api="F:Gemstone.Data.TableType.Synonym" />
        <element api="F:Gemstone.Data.TableType.GlobalTemp" />
        <element api="F:Gemstone.Data.TableType.LocalTemp" />
        <element api="F:Gemstone.Data.TableType.Link" />
        <element api="F:Gemstone.Data.TableType.Undetermined" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Gemstone.Data.TableType.Alias">
      <topicdata group="api" notopic="" />
      <apidata name="Alias" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.TableType.GlobalTemp">
      <topicdata group="api" notopic="" />
      <apidata name="GlobalTemp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.TableType.Link">
      <topicdata group="api" notopic="" />
      <apidata name="Link" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.TableType.LocalTemp">
      <topicdata group="api" notopic="" />
      <apidata name="LocalTemp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.TableType.Synonym">
      <topicdata group="api" notopic="" />
      <apidata name="Synonym" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.TableType.SystemTable">
      <topicdata group="api" notopic="" />
      <apidata name="SystemTable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.TableType.SystemView">
      <topicdata group="api" notopic="" />
      <apidata name="SystemView" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.TableType.Table">
      <topicdata group="api" notopic="" />
      <apidata name="Table" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.TableType.Undetermined">
      <topicdata group="api" notopic="" />
      <apidata name="Undetermined" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.TableType.View">
      <topicdata group="api" notopic="" />
      <apidata name="View" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data" />
        <type api="T:Gemstone.Data.TableType" ref="false" />
      </containers>
    </api>
    <api id="N:Gemstone.Data.DataExtensions">
      <topicdata group="api" />
      <apidata name="Gemstone.Data.DataExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.Data.DataExtensions.DataExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.Data.DataExtensions.DataExtensions">
      <topicdata group="api" />
      <apidata name="DataExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.AddParametersWithValues(System.Data.IDbCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.AddParameterWithValue(System.Data.IDbCommand,System.String,System.Object,System.Data.ParameterDirection)" />
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ConvertField">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField(System.Data.DataRow,System.String,System.Type)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String,``0)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField(System.Data.DataRow,System.String,System.Type,System.Object)" />
        </element>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertGuidField(System.Data.DataRow,System.String,System.Nullable{System.Guid})" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertNullableField``1(System.Data.DataRow,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.CreateParameterizedCommand(System.Data.IDbConnection,System.String,System.Object[])" />
        <element api="F:Gemstone.Data.DataExtensions.DataExtensions.DefaultTimeoutDuration" />
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript(System.Data.IDbConnection,System.IO.TextReader)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript(System.Data.IDbConnection,System.String)" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(System.Data.IDbCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(System.Data.IDbCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript(System.Data.IDbConnection,System.IO.TextReader)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript(System.Data.IDbConnection,System.String)" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(System.Data.IDbCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(System.Data.IDbCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript(System.Data.IDbConnection,System.IO.TextReader)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript(System.Data.IDbConnection,System.String)" />
        </element>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.NullAsDBNull(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters(Microsoft.Data.SqlClient.SqlCommand,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters(Microsoft.Data.SqlClient.SqlCommand,System.Object,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters``1(``0,System.Action{``0},System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbCommand,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbConnection,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbCommand,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbConnection,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbCommand,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbConnection,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.SQLEncode(System.String,Gemstone.Data.DatabaseType)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ToDataTable(System.String,System.String,System.Boolean)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ToDelimitedString(System.Data.DataTable,System.String,System.Boolean,System.Boolean)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.UpdateData(Microsoft.Data.SqlClient.SqlConnection,System.Data.DataTable,System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.DataExtensions.DataExtensions">
      <topicdata name="DataExtensions" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.DataExtensions.DataExtensions" />
      <apidata name="DataExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.AddParametersWithValues(System.Data.IDbCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.AddParameterWithValue(System.Data.IDbCommand,System.String,System.Object,System.Data.ParameterDirection)" />
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ConvertField">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField(System.Data.DataRow,System.String,System.Type)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String,``0)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField(System.Data.DataRow,System.String,System.Type,System.Object)" />
        </element>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertGuidField(System.Data.DataRow,System.String,System.Nullable{System.Guid})" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertNullableField``1(System.Data.DataRow,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.CreateParameterizedCommand(System.Data.IDbConnection,System.String,System.Object[])" />
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript(System.Data.IDbConnection,System.IO.TextReader)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript(System.Data.IDbConnection,System.String)" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(System.Data.IDbCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(System.Data.IDbCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript(System.Data.IDbConnection,System.IO.TextReader)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript(System.Data.IDbConnection,System.String)" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(System.Data.IDbCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(System.Data.IDbCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript(System.Data.IDbConnection,System.IO.TextReader)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript(System.Data.IDbConnection,System.String)" />
        </element>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.NullAsDBNull(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters(Microsoft.Data.SqlClient.SqlCommand,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters(Microsoft.Data.SqlClient.SqlCommand,System.Object,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters``1(``0,System.Action{``0},System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbCommand,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbConnection,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbCommand,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbConnection,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow">
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String)" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbCommand,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbConnection,System.Type,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.SQLEncode(System.String,Gemstone.Data.DatabaseType)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ToDataTable(System.String,System.String,System.Boolean)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ToDelimitedString(System.Data.DataTable,System.String,System.Boolean,System.Boolean)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.UpdateData(Microsoft.Data.SqlClient.SqlConnection,System.Data.DataTable,System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.DataExtensions.DataExtensions">
      <topicdata name="DataExtensions" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.DataExtensions.DataExtensions" />
      <apidata name="DataExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.DataExtensions.DataExtensions.DefaultTimeoutDuration" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.ConvertField">
      <topicdata name="ConvertField" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ConvertField" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField(System.Data.DataRow,System.String,System.Type)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String,``0)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField(System.Data.DataRow,System.String,System.Type,System.Object)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript">
      <topicdata name="ExecuteMySQLScript" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteMySQLScript" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript(System.Data.IDbConnection,System.IO.TextReader)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript(System.Data.IDbConnection,System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery">
      <topicdata name="ExecuteNonQuery" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(System.Data.IDbCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(System.Data.IDbCommand,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript">
      <topicdata name="ExecuteOracleScript" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteOracleScript" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript(System.Data.IDbConnection,System.IO.TextReader)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript(System.Data.IDbConnection,System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader">
      <topicdata name="ExecuteReader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar">
      <topicdata name="ExecuteScalar" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(System.Data.IDbCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(System.Data.IDbCommand,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript">
      <topicdata name="ExecuteTSQLScript" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteTSQLScript" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript(System.Data.IDbConnection,System.IO.TextReader)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript(System.Data.IDbConnection,System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters">
      <topicdata name="PopulateParameters" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="PopulateParameters" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters(Microsoft.Data.SqlClient.SqlCommand,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters(Microsoft.Data.SqlClient.SqlCommand,System.Object,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters``1(``0,System.Action{``0},System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData">
      <topicdata name="RetrieveData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbCommand,System.Type,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbConnection,System.Type,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet">
      <topicdata name="RetrieveDataSet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbCommand,System.Type,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbConnection,System.Type,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow">
      <topicdata name="RetrieveRow" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String)" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbCommand,System.Type,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbConnection,System.Type,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.AddParametersWithValues(System.Data.IDbCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="AddParametersWithValues" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.AddParameterWithValue(System.Data.IDbCommand,System.String,System.Object,System.Data.ParameterDirection)">
      <topicdata group="api" />
      <apidata name="AddParameterWithValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="direction" optional="true">
          <type api="T:System.Data.ParameterDirection" ref="false" />
          <argument>
            <type api="T:System.Data.ParameterDirection" ref="false" />
            <enumValue>
              <field name="Input" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String)">
      <topicdata group="api" />
      <apidata name="ConvertField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ConvertField" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="field">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField(System.Data.DataRow,System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ConvertField" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="field">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField(System.Data.DataRow,System.String,System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ConvertField" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="field">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String,``0)">
      <topicdata group="api" />
      <apidata name="ConvertField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ConvertField" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="field">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertField``1(System.Data.DataRow,System.String,``0)" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertGuidField(System.Data.DataRow,System.String,System.Nullable{System.Guid})">
      <topicdata group="api" />
      <apidata name="ConvertGuidField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="field">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertNullableField``1(System.Data.DataRow,System.String)">
      <topicdata group="api" />
      <apidata name="ConvertNullableField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="field">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ConvertNullableField``1(System.Data.DataRow,System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.CreateParameterizedCommand(System.Data.IDbConnection,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="CreateParameterizedCommand" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Gemstone.Data.DataExtensions.DataExtensions.DefaultTimeoutDuration">
      <topicdata group="api" />
      <apidata name="DefaultTimeoutDuration" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript(System.Data.IDbConnection,System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ExecuteMySQLScript" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="scriptReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript(System.Data.IDbConnection,System.String)">
      <topicdata group="api" />
      <apidata name="ExecuteMySQLScript" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteMySQLScript" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="scriptPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(System.Data.IDbCommand,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery(System.Data.IDbCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TConnection">
          <constrained>
            <implements>
              <type api="T:System.Data.IDbConnection" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="connection">
          <template name="TConnection" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.Int32,System.String,System.Object[])" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TConnection">
          <constrained>
            <implements>
              <type api="T:System.Data.IDbConnection" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="connection">
          <template name="TConnection" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteNonQuery``1(``0,System.String,System.Object[])" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript(System.Data.IDbConnection,System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ExecuteOracleScript" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="scriptReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript(System.Data.IDbConnection,System.String)">
      <topicdata group="api" />
      <apidata name="ExecuteOracleScript" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteOracleScript" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="scriptPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="behavior">
          <type api="T:System.Data.CommandBehavior" ref="false" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Data.SqlClient.SqlDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Data.SqlClient.SqlDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="behavior">
          <type api="T:System.Data.CommandBehavior" ref="false" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Data.SqlClient.SqlDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Data.SqlClient.SqlDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="behavior">
          <type api="T:System.Data.CommandBehavior" ref="false" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader(System.Data.IDbCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TConnection">
          <constrained>
            <implements>
              <type api="T:System.Data.IDbConnection" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="connection">
          <template name="TConnection" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Data.CommandBehavior,System.Object[])" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="behavior">
          <type api="T:System.Data.CommandBehavior" ref="false" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TConnection">
          <constrained>
            <implements>
              <type api="T:System.Data.IDbConnection" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="connection">
          <template name="TConnection" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.Int32,System.String,System.Object[])" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TConnection">
          <constrained>
            <implements>
              <type api="T:System.Data.IDbConnection" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="connection">
          <template name="TConnection" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteReader``1(``0,System.String,System.Object[])" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(System.Data.IDbCommand,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar(System.Data.IDbCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TConnection">
          <constrained>
            <implements>
              <type api="T:System.Data.IDbConnection" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="connection">
          <template name="TConnection" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.Int32,System.String,System.Object[])" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TConnection">
          <constrained>
            <implements>
              <type api="T:System.Data.IDbConnection" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="connection">
          <template name="TConnection" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteScalar``1(``0,System.String,System.Object[])" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript(System.Data.IDbConnection,System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ExecuteTSQLScript" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="scriptReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript(System.Data.IDbConnection,System.String)">
      <topicdata group="api" />
      <apidata name="ExecuteTSQLScript" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.ExecuteTSQLScript" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="scriptPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.NullAsDBNull(System.Collections.Generic.IEnumerable{System.Object})">
      <topicdata group="api" />
      <apidata name="NullAsDBNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters(Microsoft.Data.SqlClient.SqlCommand,System.Object,System.Object[])">
      <topicdata group="api" />
      <apidata name="PopulateParameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="parameter1">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters(Microsoft.Data.SqlClient.SqlCommand,System.Object[])">
      <topicdata group="api" />
      <apidata name="PopulateParameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters``1(``0,System.Action{``0},System.Object[])">
      <topicdata group="api" />
      <apidata name="PopulateParameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDbCommand">
          <constrained>
            <implements>
              <type api="T:System.Data.IDbCommand" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="command">
          <template name="TDbCommand" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters``1(``0,System.Action{``0},System.Object[])" />
        </parameter>
        <parameter name="deriveParameters">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TDbCommand" index="0" api="M:Gemstone.Data.DataExtensions.DataExtensions.PopulateParameters``1(``0,System.Action{``0},System.Object[])" />
            </specialization>
          </type>
        </parameter>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="startRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="startRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="startRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="startRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbCommand,System.Type,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData(System.Data.IDbConnection,System.Type,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveData" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="startRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="startRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="startRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="startRow">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRows">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbCommand,System.Type,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet(System.Data.IDbConnection,System.Type,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveDataSet" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlCommand,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Microsoft.Data.SqlClient.SqlCommand" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(Microsoft.Data.SqlClient.SqlConnection,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbCommand,System.Type,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbCommand,System.Type,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:System.Data.IDbCommand" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbConnection,System.Type,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow(System.Data.IDbConnection,System.Type,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="RetrieveRow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.DataExtensions.DataExtensions.RetrieveRow" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.Data.IDbConnection" ref="true" />
        </parameter>
        <parameter name="dataAdapterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.SQLEncode(System.String,Gemstone.Data.DatabaseType)">
      <topicdata group="api" />
      <apidata name="SQLEncode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sql">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="databaseType" optional="true">
          <type api="T:Gemstone.Data.DatabaseType" ref="false" />
          <argument>
            <type api="T:Gemstone.Data.DatabaseType" ref="false" />
            <enumValue>
              <field name="Other" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ToDataTable(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToDataTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delimitedData">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="header">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.ToDelimitedString(System.Data.DataTable,System.String,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToDelimitedString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="delimiter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="quoted">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="header">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataExtensions.DataExtensions.UpdateData(Microsoft.Data.SqlClient.SqlConnection,System.Data.DataTable,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataExtensions/DataExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:Microsoft.Data.SqlClient.SqlConnection" ref="true" />
        </parameter>
        <parameter name="sourceData">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="sourceSql">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataExtensions" />
        <type api="T:Gemstone.Data.DataExtensions.DataExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Gemstone.Data.DataSetExtensions">
      <topicdata group="api" />
      <apidata name="Gemstone.Data.DataSetExtensions" group="namespace" />
      <elements>
        <element api="T:Gemstone.Data.DataSetExtensions.DataType" />
        <element api="T:Gemstone.Data.DataSetExtensions.DataSetExtensions" />
      </elements>
    </api>
    <api id="T:Gemstone.Data.DataSetExtensions.DataSetExtensions">
      <topicdata group="api" />
      <apidata name="DataSetExtensions" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/DataSetExtensions/DataSetExtensions.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.DeriveColumnType(Gemstone.Data.DataSetExtensions.DataType)" />
        <element api="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.DeserializeToDataSet(System.IO.Stream)" />
        <element api="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.GetDataType(System.Type,System.Boolean)" />
        <element api="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.SerializeToStream(System.Data.DataSet,System.IO.Stream,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.DataSetExtensions.DataSetExtensions">
      <topicdata name="DataSetExtensions" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.DataSetExtensions.DataSetExtensions" />
      <apidata name="DataSetExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.DeriveColumnType(Gemstone.Data.DataSetExtensions.DataType)" />
        <element api="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.DeserializeToDataSet(System.IO.Stream)" />
        <element api="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.GetDataType(System.Type,System.Boolean)" />
        <element api="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.SerializeToStream(System.Data.DataSet,System.IO.Stream,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataSetExtensions" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.DeriveColumnType(Gemstone.Data.DataSetExtensions.DataType)">
      <topicdata group="api" />
      <apidata name="DeriveColumnType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataSetExtensions/DataSetExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataType">
          <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataSetExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.DeserializeToDataSet(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="DeserializeToDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataSetExtensions/DataSetExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataSetExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.GetDataType(System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetDataType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataSetExtensions/DataSetExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="objectType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="assumeStringForUnknownTypes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataSetExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Gemstone.Data.DataSetExtensions.DataSetExtensions.SerializeToStream(System.Data.DataSet,System.IO.Stream,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SerializeToStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/DataSetExtensions/DataSetExtensions.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="assumeStringForUnknownTypes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
        <parameter name="useNullableDataTypes" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataSetExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Gemstone.Data.DataSetExtensions.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Boolean" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Byte" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Char" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.DateTime" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Decimal" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Double" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Guid" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Int16" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Int32" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Int64" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.SByte" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Single" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.String" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.TimeSpan" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.UInt16" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.UInt32" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.UInt64" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Blob" />
        <element api="F:Gemstone.Data.DataSetExtensions.DataType.Object" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Blob">
      <topicdata group="api" notopic="" />
      <apidata name="Blob" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Boolean">
      <topicdata group="api" notopic="" />
      <apidata name="Boolean" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Byte">
      <topicdata group="api" notopic="" />
      <apidata name="Byte" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Char">
      <topicdata group="api" notopic="" />
      <apidata name="Char" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.DateTime">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Decimal">
      <topicdata group="api" notopic="" />
      <apidata name="Decimal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Double">
      <topicdata group="api" notopic="" />
      <apidata name="Double" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Guid">
      <topicdata group="api" notopic="" />
      <apidata name="Guid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Int16">
      <topicdata group="api" notopic="" />
      <apidata name="Int16" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Int32">
      <topicdata group="api" notopic="" />
      <apidata name="Int32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Int64">
      <topicdata group="api" notopic="" />
      <apidata name="Int64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Object">
      <topicdata group="api" notopic="" />
      <apidata name="Object" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.SByte">
      <topicdata group="api" notopic="" />
      <apidata name="SByte" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.Single">
      <topicdata group="api" notopic="" />
      <apidata name="Single" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.String">
      <topicdata group="api" notopic="" />
      <apidata name="String" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.TimeSpan">
      <topicdata group="api" notopic="" />
      <apidata name="TimeSpan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.UInt16">
      <topicdata group="api" notopic="" />
      <apidata name="UInt16" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.UInt32">
      <topicdata group="api" notopic="" />
      <apidata name="UInt32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.DataSetExtensions.DataType.UInt64">
      <topicdata group="api" notopic="" />
      <apidata name="UInt64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.DataSetExtensions" />
        <type api="T:Gemstone.Data.DataSetExtensions.DataType" ref="false" />
      </containers>
    </api>
    <api id="N:Gemstone.Data.Model">
      <topicdata group="api" />
      <apidata name="Gemstone.Data.Model" group="namespace" />
      <elements>
        <element api="T:Gemstone.Data.Model.StatementTypes" />
        <element api="T:Gemstone.Data.Model.TargetExpression" />
        <element api="T:Gemstone.Data.Model.AffixPosition" />
        <element api="T:Gemstone.Data.Model.AmendExpressionAttribute" />
        <element api="T:Gemstone.Data.Model.EncryptDataAttribute" />
        <element api="T:Gemstone.Data.Model.FieldDataTypeAttribute" />
        <element api="T:Gemstone.Data.Model.FieldNameAttribute" />
        <element api="T:Gemstone.Data.Model.ITableOperations" />
        <element api="T:Gemstone.Data.Model.NonRecordFieldAttribute" />
        <element api="T:Gemstone.Data.Model.PrimaryKeyAttribute" />
        <element api="T:Gemstone.Data.Model.RecordOperation" />
        <element api="T:Gemstone.Data.Model.RecordOperationAttribute" />
        <element api="T:Gemstone.Data.Model.RecordRestriction" />
        <element api="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" />
        <element api="T:Gemstone.Data.Model.SearchType" />
        <element api="T:Gemstone.Data.Model.SearchableAttribute" />
        <element api="T:Gemstone.Data.Model.TableNameAttribute" />
        <element api="T:Gemstone.Data.Model.TableOperations`1" />
        <element api="T:Gemstone.Data.Model.UseEscapedNameAttribute" />
      </elements>
    </api>
    <api id="T:Gemstone.Data.Model.AffixPosition">
      <topicdata group="api" />
      <apidata name="AffixPosition" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.Model.AffixPosition.Prefix" />
        <element api="F:Gemstone.Data.Model.AffixPosition.Suffix" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.AffixPosition.Prefix">
      <topicdata group="api" notopic="" />
      <apidata name="Prefix" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.AffixPosition" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AffixPosition" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.AffixPosition.Suffix">
      <topicdata group="api" notopic="" />
      <apidata name="Suffix" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.AffixPosition" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AffixPosition" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.AmendExpressionAttribute">
      <topicdata group="api" />
      <apidata name="AmendExpressionAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/AmendExpressionAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Model.AmendExpressionAttribute.#ctor">
          <element api="M:Gemstone.Data.Model.AmendExpressionAttribute.#ctor(System.String)" />
          <element api="M:Gemstone.Data.Model.AmendExpressionAttribute.#ctor(System.String,Gemstone.Data.DatabaseType)" />
        </element>
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.AffixPosition" />
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.AmendmentText" />
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.StatementTypes" />
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.TargetDatabaseType" />
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.TargetExpression" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.AmendExpressionAttribute">
      <topicdata name="AmendExpressionAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.AmendExpressionAttribute" />
      <apidata name="AmendExpressionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.AmendExpressionAttribute">
      <topicdata name="AmendExpressionAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.AmendExpressionAttribute" />
      <apidata name="AmendExpressionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.AffixPosition" />
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.AmendmentText" />
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.StatementTypes" />
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.TargetDatabaseType" />
        <element api="P:Gemstone.Data.Model.AmendExpressionAttribute.TargetExpression" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.AmendExpressionAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.Model.AmendExpressionAttribute.#ctor(System.String)" />
        <element api="M:Gemstone.Data.Model.AmendExpressionAttribute.#ctor(System.String,Gemstone.Data.DatabaseType)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.AmendExpressionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.AmendExpressionAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/AmendExpressionAttribute.cs" />
      <parameters>
        <parameter name="amendmentText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.AmendExpressionAttribute.#ctor(System.String,Gemstone.Data.DatabaseType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.AmendExpressionAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/AmendExpressionAttribute.cs" />
      <parameters>
        <parameter name="amendmentText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetDatabaseType">
          <type api="T:Gemstone.Data.DatabaseType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.AmendExpressionAttribute.AffixPosition">
      <topicdata group="api" />
      <apidata name="AffixPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/AmendExpressionAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AffixPosition" />
      <setter name="set_AffixPosition" />
      <returns>
        <type api="T:Gemstone.Data.Model.AffixPosition" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.AmendExpressionAttribute.AmendmentText">
      <topicdata group="api" />
      <apidata name="AmendmentText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/AmendExpressionAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AmendmentText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.AmendExpressionAttribute.StatementTypes">
      <topicdata group="api" />
      <apidata name="StatementTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/AmendExpressionAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StatementTypes" />
      <setter name="set_StatementTypes" />
      <returns>
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.AmendExpressionAttribute.TargetDatabaseType">
      <topicdata group="api" />
      <apidata name="TargetDatabaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/AmendExpressionAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetDatabaseType" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:Gemstone.Data.DatabaseType" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.AmendExpressionAttribute.TargetExpression">
      <topicdata group="api" />
      <apidata name="TargetExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/AmendExpressionAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetExpression" />
      <setter name="set_TargetExpression" />
      <returns>
        <type api="T:Gemstone.Data.Model.TargetExpression" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.AmendExpressionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.EncryptDataAttribute">
      <topicdata group="api" />
      <apidata name="EncryptDataAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/EncryptDataAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Model.EncryptDataAttribute.#ctor">
          <element api="M:Gemstone.Data.Model.EncryptDataAttribute.#ctor" />
          <element api="M:Gemstone.Data.Model.EncryptDataAttribute.#ctor(System.String)" />
        </element>
        <element api="F:Gemstone.Data.Model.EncryptDataAttribute.DefaultKeyReference" />
        <element api="P:Gemstone.Data.Model.EncryptDataAttribute.KeyReference" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.EncryptDataAttribute">
      <topicdata name="EncryptDataAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.EncryptDataAttribute" />
      <apidata name="EncryptDataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.EncryptDataAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.EncryptDataAttribute">
      <topicdata name="EncryptDataAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.EncryptDataAttribute" />
      <apidata name="EncryptDataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.Model.EncryptDataAttribute.KeyReference" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.EncryptDataAttribute" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.Model.EncryptDataAttribute">
      <topicdata name="EncryptDataAttribute" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.Model.EncryptDataAttribute" />
      <apidata name="EncryptDataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.Model.EncryptDataAttribute.DefaultKeyReference" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.EncryptDataAttribute" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.EncryptDataAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.Model.EncryptDataAttribute.#ctor" />
        <element api="M:Gemstone.Data.Model.EncryptDataAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.EncryptDataAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.EncryptDataAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.EncryptDataAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/EncryptDataAttribute.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.EncryptDataAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.EncryptDataAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.EncryptDataAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/EncryptDataAttribute.cs" />
      <parameters>
        <parameter name="keyReference">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.EncryptDataAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.EncryptDataAttribute.DefaultKeyReference">
      <topicdata group="api" />
      <apidata name="DefaultKeyReference" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/Model/EncryptDataAttribute.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>DefaultTableOperationsKey</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.EncryptDataAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.EncryptDataAttribute.KeyReference">
      <topicdata group="api" />
      <apidata name="KeyReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/EncryptDataAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyReference" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.EncryptDataAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.FieldDataTypeAttribute">
      <topicdata group="api" />
      <apidata name="FieldDataTypeAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/FieldDataTypeAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor">
          <element api="M:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor(System.Data.DbType)" />
          <element api="M:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor(System.Data.DbType,Gemstone.Data.DatabaseType)" />
        </element>
        <element api="P:Gemstone.Data.Model.FieldDataTypeAttribute.FieldDataType" />
        <element api="P:Gemstone.Data.Model.FieldDataTypeAttribute.TargetDatabaseType" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.FieldDataTypeAttribute">
      <topicdata name="FieldDataTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.FieldDataTypeAttribute" />
      <apidata name="FieldDataTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldDataTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.FieldDataTypeAttribute">
      <topicdata name="FieldDataTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.FieldDataTypeAttribute" />
      <apidata name="FieldDataTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.Model.FieldDataTypeAttribute.FieldDataType" />
        <element api="P:Gemstone.Data.Model.FieldDataTypeAttribute.TargetDatabaseType" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldDataTypeAttribute" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor(System.Data.DbType)" />
        <element api="M:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor(System.Data.DbType,Gemstone.Data.DatabaseType)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldDataTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor(System.Data.DbType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/FieldDataTypeAttribute.cs" />
      <parameters>
        <parameter name="fieldDataType">
          <type api="T:System.Data.DbType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldDataTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor(System.Data.DbType,Gemstone.Data.DatabaseType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.FieldDataTypeAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/FieldDataTypeAttribute.cs" />
      <parameters>
        <parameter name="fieldDataType">
          <type api="T:System.Data.DbType" ref="false" />
        </parameter>
        <parameter name="targetDatabaseType">
          <type api="T:Gemstone.Data.DatabaseType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldDataTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.FieldDataTypeAttribute.FieldDataType">
      <topicdata group="api" />
      <apidata name="FieldDataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/FieldDataTypeAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldDataType" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldDataTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.FieldDataTypeAttribute.TargetDatabaseType">
      <topicdata group="api" />
      <apidata name="TargetDatabaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/FieldDataTypeAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetDatabaseType" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:Gemstone.Data.DatabaseType" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldDataTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.FieldNameAttribute">
      <topicdata group="api" />
      <apidata name="FieldNameAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/FieldNameAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Model.FieldNameAttribute.#ctor(System.String)" />
        <element api="P:Gemstone.Data.Model.FieldNameAttribute.FieldName" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.FieldNameAttribute">
      <topicdata name="FieldNameAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.FieldNameAttribute" />
      <apidata name="FieldNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldNameAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.FieldNameAttribute">
      <topicdata name="FieldNameAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.FieldNameAttribute" />
      <apidata name="FieldNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.Model.FieldNameAttribute.FieldName" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldNameAttribute" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.FieldNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone.Data/Model/FieldNameAttribute.cs" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.FieldNameAttribute.FieldName">
      <topicdata group="api" />
      <apidata name="FieldName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/FieldNameAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FieldName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.FieldNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.ITableOperations">
      <topicdata group="api" />
      <apidata name="ITableOperations" group="type" subgroup="interface" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.AddNewOrUpdateRecord(System.Object)" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.AddNewRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.AddNewRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.AddNewRecord(System.Object)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.ApplyRecordDefaults(System.Object)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.ApplyRecordUpdates(System.Object)" />
        <element api="P:Gemstone.Data.Model.ITableOperations.ApplyRootQueryRestrictionToDeletes" />
        <element api="P:Gemstone.Data.Model.ITableOperations.ApplyRootQueryRestrictionToUpdates" />
        <element api="M:Gemstone.Data.Model.ITableOperations.ClearPrimaryKeyCache" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.DeleteRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Object)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Object[])" />
          <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecordWhere(System.String,System.Object[])" />
        <element api="P:Gemstone.Data.Model.ITableOperations.ExceptionHandler" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.FieldHasAttribute">
          <element api="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute``1(System.String)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute(System.String,System.Type)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.GetFieldNames(System.Boolean)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetFieldType(System.String)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetFieldValue(System.Object,System.String)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetInterpretedFieldValue(System.String,System.Object)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetPageOfRecords(System.Object[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeyCacheSize" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeyFieldNames(System.Boolean)" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys">
          <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys(System.Object)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.GetSearchRestriction(System.String)" />
        <element api="P:Gemstone.Data.Model.ITableOperations.HasPrimaryKeyIdentityField" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.IsSearchMatch">
          <element api="M:Gemstone.Data.Model.ITableOperations.IsSearchMatch(System.Object,System.String[])" />
          <element api="M:Gemstone.Data.Model.ITableOperations.IsSearchMatch(System.Object,System.StringComparison,System.String[])" />
        </element>
        <element api="Overload:Gemstone.Data.Model.ITableOperations.LoadRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.LoadRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.LoadRecord(System.Object[])" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.NewRecord" />
        <element api="P:Gemstone.Data.Model.ITableOperations.PrimaryKeyCache" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.QueryRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecord(Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecord(System.String,Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="Overload:Gemstone.Data.Model.ITableOperations.QueryRecordCount">
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(System.String)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCountWhere(System.String,System.Object[])" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.QueryRecords">
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,Gemstone.Data.Model.RecordRestriction,System.Int32)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,System.String)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordsWhere(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordWhere(System.String,System.Object[])" />
        <element api="P:Gemstone.Data.Model.ITableOperations.RootQueryRestriction" />
        <element api="M:Gemstone.Data.Model.ITableOperations.SearchRecords(System.String,System.Boolean,System.String,System.StringComparison)" />
        <element api="P:Gemstone.Data.Model.ITableOperations.TableName" />
        <element api="M:Gemstone.Data.Model.ITableOperations.ToDataTable(System.Collections.IEnumerable)" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute">
          <element api="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute``1(System.String,``0@)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute(System.String,System.Type,System.Attribute@)" />
        </element>
        <element api="P:Gemstone.Data.Model.ITableOperations.UnescapedTableName" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecord(System.Data.DataRow,Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecord(System.Object,Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
        </element>
        <element api="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere">
          <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere(System.Data.DataRow,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere(System.Object,System.String,System.Object[])" />
        </element>
        <element api="P:Gemstone.Data.Model.ITableOperations.UseCaseSensitiveFieldNames" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.ITableOperations">
      <topicdata name="ITableOperations" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.ITableOperations" />
      <apidata name="ITableOperations" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.AddNewOrUpdateRecord(System.Object)" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.AddNewRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.AddNewRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.AddNewRecord(System.Object)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.ApplyRecordDefaults(System.Object)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.ApplyRecordUpdates(System.Object)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.ClearPrimaryKeyCache" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.DeleteRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Object)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Object[])" />
          <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecordWhere(System.String,System.Object[])" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.FieldHasAttribute">
          <element api="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute``1(System.String)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute(System.String,System.Type)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.GetFieldNames(System.Boolean)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetFieldType(System.String)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetFieldValue(System.Object,System.String)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetInterpretedFieldValue(System.String,System.Object)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetPageOfRecords(System.Object[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeyCacheSize" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeyFieldNames(System.Boolean)" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys">
          <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys(System.Object)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.GetSearchRestriction(System.String)" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.IsSearchMatch">
          <element api="M:Gemstone.Data.Model.ITableOperations.IsSearchMatch(System.Object,System.String[])" />
          <element api="M:Gemstone.Data.Model.ITableOperations.IsSearchMatch(System.Object,System.StringComparison,System.String[])" />
        </element>
        <element api="Overload:Gemstone.Data.Model.ITableOperations.LoadRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.LoadRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.LoadRecord(System.Object[])" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.NewRecord" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.QueryRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecord(Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecord(System.String,Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="Overload:Gemstone.Data.Model.ITableOperations.QueryRecordCount">
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(System.String)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCountWhere(System.String,System.Object[])" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.QueryRecords">
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,Gemstone.Data.Model.RecordRestriction,System.Int32)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,System.String)" />
        </element>
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordsWhere(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordWhere(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.Model.ITableOperations.SearchRecords(System.String,System.Boolean,System.String,System.StringComparison)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.ToDataTable(System.Collections.IEnumerable)" />
        <element api="Overload:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute">
          <element api="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute``1(System.String,``0@)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute(System.String,System.Type,System.Attribute@)" />
        </element>
        <element api="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecord">
          <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecord(System.Data.DataRow,Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecord(System.Object,Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
        </element>
        <element api="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere">
          <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere(System.Data.DataRow,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere(System.Object,System.String,System.Object[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.ITableOperations">
      <topicdata name="ITableOperations" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.ITableOperations" />
      <apidata name="ITableOperations" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Gemstone.Data.Model.ITableOperations.ApplyRootQueryRestrictionToDeletes" />
        <element api="P:Gemstone.Data.Model.ITableOperations.ApplyRootQueryRestrictionToUpdates" />
        <element api="P:Gemstone.Data.Model.ITableOperations.ExceptionHandler" />
        <element api="P:Gemstone.Data.Model.ITableOperations.HasPrimaryKeyIdentityField" />
        <element api="P:Gemstone.Data.Model.ITableOperations.PrimaryKeyCache" />
        <element api="P:Gemstone.Data.Model.ITableOperations.RootQueryRestriction" />
        <element api="P:Gemstone.Data.Model.ITableOperations.TableName" />
        <element api="P:Gemstone.Data.Model.ITableOperations.UnescapedTableName" />
        <element api="P:Gemstone.Data.Model.ITableOperations.UseCaseSensitiveFieldNames" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.AddNewRecord">
      <topicdata name="AddNewRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AddNewRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.AddNewRecord(System.Data.DataRow)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.AddNewRecord(System.Object)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.DeleteRecord">
      <topicdata name="DeleteRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Data.DataRow)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Object)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Object[])" />
        <element api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.FieldHasAttribute">
      <topicdata name="FieldHasAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FieldHasAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute``1(System.String)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys">
      <topicdata name="GetPrimaryKeys" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetPrimaryKeys" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys(System.Data.DataRow)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys(System.Object)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.IsSearchMatch">
      <topicdata name="IsSearchMatch" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsSearchMatch" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.IsSearchMatch(System.Object,System.String[])" />
        <element api="M:Gemstone.Data.Model.ITableOperations.IsSearchMatch(System.Object,System.StringComparison,System.String[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.LoadRecord">
      <topicdata name="LoadRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LoadRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.LoadRecord(System.Data.DataRow)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.LoadRecord(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.QueryRecord">
      <topicdata name="QueryRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="QueryRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecord(Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecord(System.String,Gemstone.Data.Model.RecordRestriction)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.QueryRecordCount">
      <topicdata name="QueryRecordCount" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="QueryRecordCount" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(System.String)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(Gemstone.Data.Model.RecordRestriction)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.QueryRecords">
      <topicdata name="QueryRecords" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,Gemstone.Data.Model.RecordRestriction,System.Int32)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute">
      <topicdata name="TryGetFieldAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="TryGetFieldAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute``1(System.String,``0@)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute(System.String,System.Type,System.Attribute@)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecord">
      <topicdata name="UpdateRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="UpdateRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecord(System.Data.DataRow,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecord(System.Object,Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere">
      <topicdata name="UpdateRecordWhere" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="UpdateRecordWhere" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere(System.Data.DataRow,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere(System.Object,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.AddNewOrUpdateRecord(System.Object)">
      <topicdata group="api" />
      <apidata name="AddNewOrUpdateRecord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.AddNewRecord(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="AddNewRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.AddNewRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.AddNewRecord(System.Object)">
      <topicdata group="api" />
      <apidata name="AddNewRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.AddNewRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.ApplyRecordDefaults(System.Object)">
      <topicdata group="api" />
      <apidata name="ApplyRecordDefaults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.ApplyRecordUpdates(System.Object)">
      <topicdata group="api" />
      <apidata name="ApplyRecordUpdates" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.ITableOperations.ApplyRootQueryRestrictionToDeletes">
      <topicdata group="api" />
      <apidata name="ApplyRootQueryRestrictionToDeletes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplyRootQueryRestrictionToDeletes" />
      <setter name="set_ApplyRootQueryRestrictionToDeletes" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.ITableOperations.ApplyRootQueryRestrictionToUpdates">
      <topicdata group="api" />
      <apidata name="ApplyRootQueryRestrictionToUpdates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplyRootQueryRestrictionToUpdates" />
      <setter name="set_ApplyRootQueryRestrictionToUpdates" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.ClearPrimaryKeyCache">
      <topicdata group="api" />
      <apidata name="ClearPrimaryKeyCache" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.DeleteRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="restriction">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
        <parameter name="applyRootQueryRestriction" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.DeleteRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Object)">
      <topicdata group="api" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.DeleteRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Object[])">
      <topicdata group="api" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.DeleteRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="primaryKeys" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.DeleteRecordWhere(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="DeleteRecordWhere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.ITableOperations.ExceptionHandler">
      <topicdata group="api" />
      <apidata name="ExceptionHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ExceptionHandler" />
      <setter name="set_ExceptionHandler" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.Exception" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute``1(System.String)">
      <topicdata group="api" />
      <apidata name="FieldHasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.FieldHasAttribute" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="FieldHasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.FieldHasAttribute" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetFieldNames(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetFieldNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="escaped" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetFieldType(System.String)">
      <topicdata group="api" />
      <apidata name="GetFieldType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetFieldValue(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="GetFieldValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetInterpretedFieldValue(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="GetInterpretedFieldValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetPageOfRecords(System.Object[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetPageOfRecords" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="records">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="page">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeyCacheSize">
      <topicdata group="api" />
      <apidata name="GetPrimaryKeyCacheSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeyFieldNames(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetPrimaryKeyFieldNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="escaped" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="GetPrimaryKeys" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys(System.Object)">
      <topicdata group="api" />
      <apidata name="GetPrimaryKeys" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.GetSearchRestriction(System.String)">
      <topicdata group="api" />
      <apidata name="GetSearchRestriction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="searchText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.ITableOperations.HasPrimaryKeyIdentityField">
      <topicdata group="api" />
      <apidata name="HasPrimaryKeyIdentityField" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasPrimaryKeyIdentityField" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.IsSearchMatch(System.Object,System.String[])">
      <topicdata group="api" />
      <apidata name="IsSearchMatch" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.IsSearchMatch" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="searchValues" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.IsSearchMatch(System.Object,System.StringComparison,System.String[])">
      <topicdata group="api" />
      <apidata name="IsSearchMatch" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.IsSearchMatch" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="comparison">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
        <parameter name="searchValues" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.LoadRecord(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="LoadRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.LoadRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.LoadRecord(System.Object[])">
      <topicdata group="api" />
      <apidata name="LoadRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.LoadRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="primaryKeys" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.NewRecord">
      <topicdata group="api" />
      <apidata name="NewRecord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.ITableOperations.PrimaryKeyCache">
      <topicdata group="api" />
      <apidata name="PrimaryKeyCache" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryKeyCache" />
      <setter name="set_PrimaryKeyCache" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecord(Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.QueryRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="restriction">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecord(System.String,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.QueryRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="orderByExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="restriction">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecordCount" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.QueryRecordCount" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(System.String)">
      <topicdata group="api" />
      <apidata name="QueryRecordCount" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.QueryRecordCount" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="searchText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecordCountWhere(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="QueryRecordCountWhere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecords(Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.QueryRecords" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="restriction">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,Gemstone.Data.Model.RecordRestriction,System.Int32)">
      <topicdata group="api" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.QueryRecords" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="orderByExpression" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="limit" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.QueryRecords" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sortField">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ascending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="page">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.QueryRecords" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sortField">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ascending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="page">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="searchText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecordsWhere(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="QueryRecordsWhere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.QueryRecordWhere(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="QueryRecordWhere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.ITableOperations.RootQueryRestriction">
      <topicdata group="api" />
      <apidata name="RootQueryRestriction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RootQueryRestriction" />
      <setter name="set_RootQueryRestriction" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.SearchRecords(System.String,System.Boolean,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="SearchRecords" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sortField">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ascending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="searchText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparison" optional="true">
          <type api="T:System.StringComparison" ref="false" />
          <argument>
            <type api="T:System.StringComparison" ref="false" />
            <enumValue>
              <field name="OrdinalIgnoreCase" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.ITableOperations.TableName">
      <topicdata group="api" />
      <apidata name="TableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.ToDataTable(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="ToDataTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="records">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute(System.String,System.Type,System.Attribute@)">
      <topicdata group="api" />
      <apidata name="TryGetFieldAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attribute" out="true">
          <referenceTo>
            <type api="T:System.Attribute" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute``1(System.String,``0@)">
      <topicdata group="api" />
      <apidata name="TryGetFieldAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute" out="true">
          <referenceTo>
            <template name="TAttribute" index="0" api="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute``1(System.String,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.ITableOperations.UnescapedTableName">
      <topicdata group="api" />
      <apidata name="UnescapedTableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_UnescapedTableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.UpdateRecord(System.Data.DataRow,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="UpdateRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.UpdateRecord(System.Object,Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="UpdateRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecord" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="applyRootQueryRestriction" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere(System.Data.DataRow,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="UpdateRecordWhere" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere(System.Object,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="UpdateRecordWhere" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.ITableOperations.UseCaseSensitiveFieldNames">
      <topicdata group="api" />
      <apidata name="UseCaseSensitiveFieldNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/ITableOperations.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UseCaseSensitiveFieldNames" />
      <setter name="set_UseCaseSensitiveFieldNames" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.NonRecordFieldAttribute">
      <topicdata group="api" />
      <apidata name="NonRecordFieldAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/NonRecordFieldAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Model.NonRecordFieldAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.NonRecordFieldAttribute">
      <topicdata name="NonRecordFieldAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.NonRecordFieldAttribute" />
      <apidata name="NonRecordFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.NonRecordFieldAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.NonRecordFieldAttribute">
      <topicdata name="NonRecordFieldAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.NonRecordFieldAttribute" />
      <apidata name="NonRecordFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.NonRecordFieldAttribute" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.NonRecordFieldAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone.Data/Model/NonRecordFieldAttribute.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.NonRecordFieldAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.PrimaryKeyAttribute">
      <topicdata group="api" />
      <apidata name="PrimaryKeyAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/PrimaryKeyAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor">
          <element api="M:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor" />
          <element api="M:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="P:Gemstone.Data.Model.PrimaryKeyAttribute.IsIdentity" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.PrimaryKeyAttribute">
      <topicdata name="PrimaryKeyAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.PrimaryKeyAttribute" />
      <apidata name="PrimaryKeyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.PrimaryKeyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.PrimaryKeyAttribute">
      <topicdata name="PrimaryKeyAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.PrimaryKeyAttribute" />
      <apidata name="PrimaryKeyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.Model.PrimaryKeyAttribute.IsIdentity" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.PrimaryKeyAttribute" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor" />
        <element api="M:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.PrimaryKeyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/PrimaryKeyAttribute.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.PrimaryKeyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.PrimaryKeyAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/PrimaryKeyAttribute.cs" />
      <parameters>
        <parameter name="isIdentity">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.PrimaryKeyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.PrimaryKeyAttribute.IsIdentity">
      <topicdata group="api" />
      <apidata name="IsIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/PrimaryKeyAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIdentity" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.PrimaryKeyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.RecordOperation">
      <topicdata group="api" />
      <apidata name="RecordOperation" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.Model.RecordOperation.QueryRecordCount" />
        <element api="F:Gemstone.Data.Model.RecordOperation.QueryRecords" />
        <element api="F:Gemstone.Data.Model.RecordOperation.DeleteRecord" />
        <element api="F:Gemstone.Data.Model.RecordOperation.CreateNewRecord" />
        <element api="F:Gemstone.Data.Model.RecordOperation.AddNewRecord" />
        <element api="F:Gemstone.Data.Model.RecordOperation.UpdateRecord" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RecordOperation.AddNewRecord">
      <topicdata group="api" notopic="" />
      <apidata name="AddNewRecord" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RecordOperation.CreateNewRecord">
      <topicdata group="api" notopic="" />
      <apidata name="CreateNewRecord" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RecordOperation.DeleteRecord">
      <topicdata group="api" notopic="" />
      <apidata name="DeleteRecord" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RecordOperation.QueryRecordCount">
      <topicdata group="api" notopic="" />
      <apidata name="QueryRecordCount" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RecordOperation.QueryRecords">
      <topicdata group="api" notopic="" />
      <apidata name="QueryRecords" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RecordOperation.UpdateRecord">
      <topicdata group="api" notopic="" />
      <apidata name="UpdateRecord" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.RecordOperationAttribute">
      <topicdata group="api" />
      <apidata name="RecordOperationAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/RecordOperationAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Model.RecordOperationAttribute.#ctor(System.Type,Gemstone.Data.Model.RecordOperation)" />
        <element api="P:Gemstone.Data.Model.RecordOperationAttribute.ModelType" />
        <element api="P:Gemstone.Data.Model.RecordOperationAttribute.Operation" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.RecordOperationAttribute">
      <topicdata name="RecordOperationAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.RecordOperationAttribute" />
      <apidata name="RecordOperationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperationAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.RecordOperationAttribute">
      <topicdata name="RecordOperationAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.RecordOperationAttribute" />
      <apidata name="RecordOperationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.Model.RecordOperationAttribute.ModelType" />
        <element api="P:Gemstone.Data.Model.RecordOperationAttribute.Operation" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperationAttribute" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordOperationAttribute.#ctor(System.Type,Gemstone.Data.Model.RecordOperation)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone.Data/Model/RecordOperationAttribute.cs" />
      <parameters>
        <parameter name="modelType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="operation">
          <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.RecordOperationAttribute.ModelType">
      <topicdata group="api" />
      <apidata name="ModelType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RecordOperationAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ModelType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.RecordOperationAttribute.Operation">
      <topicdata group="api" />
      <apidata name="Operation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RecordOperationAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Operation" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordOperation" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordOperationAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.RecordRestriction">
      <topicdata group="api" />
      <apidata name="RecordRestriction" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Model.RecordRestriction.#ctor(System.String,System.Object[])" />
        <element api="Overload:Gemstone.Data.Model.RecordRestriction.Clone">
          <element api="M:Gemstone.Data.Model.RecordRestriction.Clone" />
          <element api="M:Gemstone.Data.Model.RecordRestriction.Clone(Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="M:Gemstone.Data.Model.RecordRestriction.CombineAnd(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.CombineOr(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="Overload:Gemstone.Data.Model.RecordRestriction.Equals">
          <element api="M:Gemstone.Data.Model.RecordRestriction.Equals(System.Object)" />
          <element api="M:Gemstone.Data.Model.RecordRestriction.Equals(Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="F:Gemstone.Data.Model.RecordRestriction.FilterExpression" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.GetHashCode" />
        <element api="P:Gemstone.Data.Model.RecordRestriction.Item(System.Int32)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_Addition(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_BitwiseAnd(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_BitwiseOr(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_Equality(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_Implicit(System.String)~Gemstone.Data.Model.RecordRestriction" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_Inequality(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="F:Gemstone.Data.Model.RecordRestriction.Parameters" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.RecordRestriction">
      <topicdata name="RecordRestriction" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.RecordRestriction" />
      <apidata name="RecordRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Model.RecordRestriction.Clone">
          <element api="M:Gemstone.Data.Model.RecordRestriction.Clone" />
          <element api="M:Gemstone.Data.Model.RecordRestriction.Clone(Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="M:Gemstone.Data.Model.RecordRestriction.CombineAnd(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.CombineOr(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="Overload:Gemstone.Data.Model.RecordRestriction.Equals">
          <element api="M:Gemstone.Data.Model.RecordRestriction.Equals(System.Object)" />
          <element api="M:Gemstone.Data.Model.RecordRestriction.Equals(Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="M:Gemstone.Data.Model.RecordRestriction.GetHashCode" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" />
      </containers>
    </api>
    <api id="Operators.T:Gemstone.Data.Model.RecordRestriction">
      <topicdata name="RecordRestriction" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Gemstone.Data.Model.RecordRestriction" />
      <apidata name="RecordRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_Addition(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_BitwiseAnd(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_BitwiseOr(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_Equality(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_Implicit(System.String)~Gemstone.Data.Model.RecordRestriction" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.op_Inequality(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.RecordRestriction">
      <topicdata name="RecordRestriction" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.RecordRestriction" />
      <apidata name="RecordRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Gemstone.Data.Model.RecordRestriction.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.Model.RecordRestriction">
      <topicdata name="RecordRestriction" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.Model.RecordRestriction" />
      <apidata name="RecordRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.Model.RecordRestriction.FilterExpression" />
        <element api="F:Gemstone.Data.Model.RecordRestriction.Parameters" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.RecordRestriction.Clone">
      <topicdata name="Clone" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Clone" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.RecordRestriction.Clone" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.Clone(Gemstone.Data.Model.RecordRestriction)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.RecordRestriction.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.RecordRestriction.Equals(System.Object)" />
        <element api="M:Gemstone.Data.Model.RecordRestriction.Equals(Gemstone.Data.Model.RecordRestriction)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.#ctor(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.RecordRestriction.Clone" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.Clone(Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Gemstone.Data.Model.RecordRestriction.Clone" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.CombineAnd(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="CombineAnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.CombineOr(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="CombineOr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.Equals(Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.RecordRestriction.Equals" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.RecordRestriction.Equals" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RecordRestriction.FilterExpression">
      <topicdata group="api" />
      <apidata name="FilterExpression" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.RecordRestriction.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.op_Addition(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.op_BitwiseAnd(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="BitwiseAnd" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.op_BitwiseOr(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="BitwiseOr" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.op_Equality(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.op_Implicit(System.String)~Gemstone.Data.Model.RecordRestriction">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RecordRestriction.op_Inequality(Gemstone.Data.Model.RecordRestriction,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RecordRestriction.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RecordRestriction.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.RootQueryRestrictionAttribute">
      <topicdata group="api" />
      <apidata name="RootQueryRestrictionAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/RootQueryRestrictionAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Model.RootQueryRestrictionAttribute.#ctor(System.String,System.Object[])" />
        <element api="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.ApplyToDeletes" />
        <element api="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.ApplyToUpdates" />
        <element api="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.FilterExpression" />
        <element api="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.Parameters" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.RootQueryRestrictionAttribute">
      <topicdata name="RootQueryRestrictionAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" />
      <apidata name="RootQueryRestrictionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.RootQueryRestrictionAttribute">
      <topicdata name="RootQueryRestrictionAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" />
      <apidata name="RootQueryRestrictionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" />
      </containers>
    </api>
    <api id="Fields.T:Gemstone.Data.Model.RootQueryRestrictionAttribute">
      <topicdata name="RootQueryRestrictionAttribute" group="list" subgroup="Fields" typeTopicId="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" />
      <apidata name="RootQueryRestrictionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.ApplyToDeletes" />
        <element api="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.ApplyToUpdates" />
        <element api="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.FilterExpression" />
        <element api="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.Parameters" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.RootQueryRestrictionAttribute.#ctor(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone.Data/Model/RootQueryRestrictionAttribute.cs" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.ApplyToDeletes">
      <topicdata group="api" />
      <apidata name="ApplyToDeletes" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RootQueryRestrictionAttribute.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.ApplyToUpdates">
      <topicdata group="api" />
      <apidata name="ApplyToUpdates" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RootQueryRestrictionAttribute.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.FilterExpression">
      <topicdata group="api" />
      <apidata name="FilterExpression" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RootQueryRestrictionAttribute.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.RootQueryRestrictionAttribute.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/RootQueryRestrictionAttribute.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.RootQueryRestrictionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.SearchableAttribute">
      <topicdata group="api" />
      <apidata name="SearchableAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/SearchableAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Model.SearchableAttribute.#ctor">
          <element api="M:Gemstone.Data.Model.SearchableAttribute.#ctor" />
          <element api="M:Gemstone.Data.Model.SearchableAttribute.#ctor(Gemstone.Data.Model.SearchType)" />
        </element>
        <element api="P:Gemstone.Data.Model.SearchableAttribute.SearchType" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.SearchableAttribute">
      <topicdata name="SearchableAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.SearchableAttribute" />
      <apidata name="SearchableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.SearchableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.SearchableAttribute">
      <topicdata name="SearchableAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.SearchableAttribute" />
      <apidata name="SearchableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.Model.SearchableAttribute.SearchType" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.SearchableAttribute" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.SearchableAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.Model.SearchableAttribute.#ctor" />
        <element api="M:Gemstone.Data.Model.SearchableAttribute.#ctor(Gemstone.Data.Model.SearchType)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.SearchableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.SearchableAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.SearchableAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/SearchableAttribute.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.SearchableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.SearchableAttribute.#ctor(Gemstone.Data.Model.SearchType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.SearchableAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/SearchableAttribute.cs" />
      <parameters>
        <parameter name="searchType">
          <type api="T:Gemstone.Data.Model.SearchType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.SearchableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.SearchableAttribute.SearchType">
      <topicdata group="api" />
      <apidata name="SearchType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/SearchableAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SearchType" />
      <returns>
        <type api="T:Gemstone.Data.Model.SearchType" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.SearchableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.SearchType">
      <topicdata group="api" />
      <apidata name="SearchType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.Model.SearchType.Default" />
        <element api="F:Gemstone.Data.Model.SearchType.LikeExpression" />
        <element api="F:Gemstone.Data.Model.SearchType.FullValueMatch" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.SearchType.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.SearchType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.SearchType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.SearchType.FullValueMatch">
      <topicdata group="api" notopic="" />
      <apidata name="FullValueMatch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.SearchType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.SearchType" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.SearchType.LikeExpression">
      <topicdata group="api" notopic="" />
      <apidata name="LikeExpression" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.SearchType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.SearchType" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.StatementTypes">
      <topicdata group="api" />
      <apidata name="StatementTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.Model.StatementTypes.Select" />
        <element api="F:Gemstone.Data.Model.StatementTypes.SelectCount" />
        <element api="F:Gemstone.Data.Model.StatementTypes.SelectSet" />
        <element api="F:Gemstone.Data.Model.StatementTypes.SelectRow" />
        <element api="F:Gemstone.Data.Model.StatementTypes.Insert" />
        <element api="F:Gemstone.Data.Model.StatementTypes.Update" />
        <element api="F:Gemstone.Data.Model.StatementTypes.Delete" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:Gemstone.Data.Model.StatementTypes.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.StatementTypes.Insert">
      <topicdata group="api" notopic="" />
      <apidata name="Insert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.StatementTypes.Select">
      <topicdata group="api" notopic="" />
      <apidata name="Select" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.StatementTypes.SelectCount">
      <topicdata group="api" notopic="" />
      <apidata name="SelectCount" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.StatementTypes.SelectRow">
      <topicdata group="api" notopic="" />
      <apidata name="SelectRow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.StatementTypes.SelectSet">
      <topicdata group="api" notopic="" />
      <apidata name="SelectSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.StatementTypes.Update">
      <topicdata group="api" notopic="" />
      <apidata name="Update" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.StatementTypes" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.TableNameAttribute">
      <topicdata group="api" />
      <apidata name="TableNameAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/TableNameAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Model.TableNameAttribute.#ctor(System.String)" />
        <element api="P:Gemstone.Data.Model.TableNameAttribute.TableName" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.TableNameAttribute">
      <topicdata name="TableNameAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.TableNameAttribute" />
      <apidata name="TableNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableNameAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.TableNameAttribute">
      <topicdata name="TableNameAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.TableNameAttribute" />
      <apidata name="TableNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.Model.TableNameAttribute.TableName" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableNameAttribute" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Gemstone.Data/Model/TableNameAttribute.cs" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableNameAttribute.TableName">
      <topicdata group="api" />
      <apidata name="TableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableNameAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.TableOperations`1">
      <topicdata group="api" />
      <apidata name="TableOperations" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <implements>
        <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.#ctor">
          <element api="M:Gemstone.Data.Model.TableOperations`1.#ctor(Gemstone.Data.AdoDataConnection,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.#ctor(Gemstone.Data.AdoDataConnection,System.Action{System.Exception},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.AddNewOrUpdateRecord(`0)" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.AddNewRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.AddNewRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.AddNewRecord(`0)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordDefaults(`0)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordDefaultsFunction" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordUpdates(`0)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordUpdatesFunction" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.ApplyRootQueryRestrictionToDeletes" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.ApplyRootQueryRestrictionToUpdates" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ClearPrimaryKeyCache" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.Connection" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.DeleteRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(System.Object[])" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(`0)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecordWhere(System.String,System.Object[])" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.ExceptionHandler" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute">
          <element api="M:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute``1(System.String)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute(System.String,System.Type)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetFieldNames(System.Boolean)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetFieldType(System.String)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetFieldValue(`0,System.String)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetInterpretedFieldValue(System.String,System.Object)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetPageOfRecords(`0[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeyCacheSize" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeyFieldNames(System.Boolean)" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys">
          <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys(`0)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetSearchRestriction(System.String)" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.HasPrimaryKeyIdentityField" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.IsSearchMatch">
          <element api="M:Gemstone.Data.Model.TableOperations`1.IsSearchMatch(`0,System.String[])" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.IsSearchMatch(`0,System.StringComparison,System.String[])" />
        </element>
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.LoadRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.LoadRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.LoadRecord(System.Object[])" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.LoadRecordFunction" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.NewRecord" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.NewRecordFunction" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.PrimaryKeyCache" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecord(Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecord(System.String,Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecordCount">
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCount(System.String)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCount(Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCountWhere(System.String,System.Object[])" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecords">
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,Gemstone.Data.Model.RecordRestriction,System.Int32)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,System.String)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordsWhere(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordWhere(System.String,System.Object[])" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.RootQueryRestriction" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.SearchRecords(System.String,System.Boolean,System.String,System.StringComparison)" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.TableName" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ToDataTable(System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute">
          <element api="M:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute``1(System.String,``0@)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute(System.String,System.Type,System.Attribute@)" />
        </element>
        <element api="P:Gemstone.Data.Model.TableOperations`1.TypeRegistry" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.UnescapedTableName" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecord(System.Data.DataRow,Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecord(`0,Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
        </element>
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere">
          <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere(System.Data.DataRow,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere(`0,System.String,System.Object[])" />
        </element>
        <element api="P:Gemstone.Data.Model.TableOperations`1.UseCaseSensitiveFieldNames" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.TableOperations`1">
      <topicdata name="TableOperations" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.TableOperations`1" />
      <apidata name="TableOperations" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.AddNewOrUpdateRecord(`0)" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.AddNewRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.AddNewRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.AddNewRecord(`0)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordDefaults(`0)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordDefaultsFunction" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordUpdates(`0)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordUpdatesFunction" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ClearPrimaryKeyCache" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.DeleteRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(System.Object[])" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(`0)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecordWhere(System.String,System.Object[])" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute">
          <element api="M:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute``1(System.String)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute(System.String,System.Type)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetFieldNames(System.Boolean)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetFieldType(System.String)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetFieldValue(`0,System.String)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetInterpretedFieldValue(System.String,System.Object)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetPageOfRecords(`0[],System.Int32,System.Int32)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeyCacheSize" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeyFieldNames(System.Boolean)" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys">
          <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys(`0)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetSearchRestriction(System.String)" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.IsSearchMatch">
          <element api="M:Gemstone.Data.Model.TableOperations`1.IsSearchMatch(`0,System.String[])" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.IsSearchMatch(`0,System.StringComparison,System.String[])" />
        </element>
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.LoadRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.LoadRecord(System.Data.DataRow)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.LoadRecord(System.Object[])" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.LoadRecordFunction" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.NewRecord" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.NewRecordFunction" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecord(Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecord(System.String,Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecordCount">
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCount(System.String)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCount(Gemstone.Data.Model.RecordRestriction)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCountWhere(System.String,System.Object[])" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecords">
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,Gemstone.Data.Model.RecordRestriction,System.Int32)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,System.String)" />
        </element>
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordsWhere(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordWhere(System.String,System.Object[])" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.SearchRecords(System.String,System.Boolean,System.String,System.StringComparison)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.ToDataTable(System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute">
          <element api="M:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute``1(System.String,``0@)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute(System.String,System.Type,System.Attribute@)" />
        </element>
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecord">
          <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecord(System.Data.DataRow,Gemstone.Data.Model.RecordRestriction)" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecord(`0,Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
        </element>
        <element api="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere">
          <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere(System.Data.DataRow,System.String,System.Object[])" />
          <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere(`0,System.String,System.Object[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.TableOperations`1">
      <topicdata name="TableOperations" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.TableOperations`1" />
      <apidata name="TableOperations" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <elements>
        <element api="P:Gemstone.Data.Model.TableOperations`1.ApplyRootQueryRestrictionToDeletes" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.ApplyRootQueryRestrictionToUpdates" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.Connection" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.ExceptionHandler" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.HasPrimaryKeyIdentityField" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.PrimaryKeyCache" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.RootQueryRestriction" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.TableName" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.TypeRegistry" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.UnescapedTableName" />
        <element api="P:Gemstone.Data.Model.TableOperations`1.UseCaseSensitiveFieldNames" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.#ctor(Gemstone.Data.AdoDataConnection,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.#ctor(Gemstone.Data.AdoDataConnection,System.Action{System.Exception},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.AddNewRecord">
      <topicdata name="AddNewRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AddNewRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.AddNewRecord(System.Data.DataRow)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.AddNewRecord(`0)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.DeleteRecord">
      <topicdata name="DeleteRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(System.Data.DataRow)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(System.Object[])" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(`0)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute">
      <topicdata name="FieldHasAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FieldHasAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute``1(System.String)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys">
      <topicdata name="GetPrimaryKeys" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetPrimaryKeys" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys(System.Data.DataRow)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys(`0)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.IsSearchMatch">
      <topicdata name="IsSearchMatch" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="IsSearchMatch" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.IsSearchMatch(`0,System.String[])" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.IsSearchMatch(`0,System.StringComparison,System.String[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.LoadRecord">
      <topicdata name="LoadRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="LoadRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.LoadRecord(System.Data.DataRow)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.LoadRecord(System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecord">
      <topicdata name="QueryRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="QueryRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecord(Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecord(System.String,Gemstone.Data.Model.RecordRestriction)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecordCount">
      <topicdata name="QueryRecordCount" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="QueryRecordCount" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCount(System.String)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCount(Gemstone.Data.Model.RecordRestriction)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecords">
      <topicdata name="QueryRecords" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,Gemstone.Data.Model.RecordRestriction,System.Int32)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute">
      <topicdata name="TryGetFieldAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="TryGetFieldAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute``1(System.String,``0@)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute(System.String,System.Type,System.Attribute@)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecord">
      <topicdata name="UpdateRecord" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="UpdateRecord" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecord(System.Data.DataRow,Gemstone.Data.Model.RecordRestriction)" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecord(`0,Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere">
      <topicdata name="UpdateRecordWhere" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="UpdateRecordWhere" group="member" subgroup="method" />
      <elements>
        <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere(System.Data.DataRow,System.String,System.Object[])" />
        <element api="M:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere(`0,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.#ctor(Gemstone.Data.AdoDataConnection,System.Action{System.Exception},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.TableOperations`1.#ctor" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <parameters>
        <parameter name="connection">
          <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
        </parameter>
        <parameter name="exceptionHandler">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="customTokens" optional="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.#ctor(Gemstone.Data.AdoDataConnection,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.TableOperations`1.#ctor" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <parameters>
        <parameter name="connection">
          <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
        </parameter>
        <parameter name="customTokens" optional="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.AddNewOrUpdateRecord(`0)">
      <topicdata group="api" />
      <apidata name="AddNewOrUpdateRecord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.AddNewRecord(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="AddNewRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.AddNewRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.AddNewRecord(System.Data.DataRow)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.AddNewRecord(`0)">
      <topicdata group="api" />
      <apidata name="AddNewRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.AddNewRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordDefaults(`0)">
      <topicdata group="api" />
      <apidata name="ApplyRecordDefaults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordDefaultsFunction">
      <topicdata group="api" />
      <apidata name="ApplyRecordDefaultsFunction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordUpdates(`0)">
      <topicdata group="api" />
      <apidata name="ApplyRecordUpdates" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.ApplyRecordUpdatesFunction">
      <topicdata group="api" />
      <apidata name="ApplyRecordUpdatesFunction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.ApplyRootQueryRestrictionToDeletes">
      <topicdata group="api" />
      <apidata name="ApplyRootQueryRestrictionToDeletes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplyRootQueryRestrictionToDeletes" />
      <setter name="set_ApplyRootQueryRestrictionToDeletes" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.Model.ITableOperations.ApplyRootQueryRestrictionToDeletes">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.ApplyRootQueryRestrictionToUpdates">
      <topicdata group="api" />
      <apidata name="ApplyRootQueryRestrictionToUpdates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplyRootQueryRestrictionToUpdates" />
      <setter name="set_ApplyRootQueryRestrictionToUpdates" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.Model.ITableOperations.ApplyRootQueryRestrictionToUpdates">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.ClearPrimaryKeyCache">
      <topicdata group="api" />
      <apidata name="ClearPrimaryKeyCache" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.ClearPrimaryKeyCache">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Connection" />
      <returns>
        <type api="T:Gemstone.Data.AdoDataConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.DeleteRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="restriction">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
        <parameter name="applyRootQueryRestriction" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.DeleteRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Data.DataRow)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(System.Object[])">
      <topicdata group="api" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.DeleteRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="primaryKeys" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.DeleteRecord(System.Object[])">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.DeleteRecord(`0)">
      <topicdata group="api" />
      <apidata name="DeleteRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.DeleteRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.DeleteRecordWhere(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="DeleteRecordWhere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.DeleteRecordWhere(System.String,System.Object[])">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.ExceptionHandler">
      <topicdata group="api" />
      <apidata name="ExceptionHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ExceptionHandler" />
      <setter name="set_ExceptionHandler" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.Exception" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Gemstone.Data.Model.ITableOperations.ExceptionHandler">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute``1(System.String)">
      <topicdata group="api" />
      <apidata name="FieldHasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute``1(System.String)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="FieldHasAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.FieldHasAttribute" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.FieldHasAttribute(System.String,System.Type)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetFieldNames(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetFieldNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="escaped" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.GetFieldNames(System.Boolean)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetFieldType(System.String)">
      <topicdata group="api" />
      <apidata name="GetFieldType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.GetFieldType(System.String)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetFieldValue(`0,System.String)">
      <topicdata group="api" />
      <apidata name="GetFieldValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetInterpretedFieldValue(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="GetInterpretedFieldValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.GetInterpretedFieldValue(System.String,System.Object)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetPageOfRecords(`0[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetPageOfRecords" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="records">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </arrayOf>
        </parameter>
        <parameter name="page">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeyCacheSize">
      <topicdata group="api" />
      <apidata name="GetPrimaryKeyCacheSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeyCacheSize">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeyFieldNames(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetPrimaryKeyFieldNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="escaped" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeyFieldNames(System.Boolean)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="GetPrimaryKeys" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.GetPrimaryKeys(System.Data.DataRow)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys(`0)">
      <topicdata group="api" />
      <apidata name="GetPrimaryKeys" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.GetPrimaryKeys" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.GetSearchRestriction(System.String)">
      <topicdata group="api" />
      <apidata name="GetSearchRestriction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="searchText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.GetSearchRestriction(System.String)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.HasPrimaryKeyIdentityField">
      <topicdata group="api" />
      <apidata name="HasPrimaryKeyIdentityField" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_HasPrimaryKeyIdentityField" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.Model.ITableOperations.HasPrimaryKeyIdentityField">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.IsSearchMatch(`0,System.String[])">
      <topicdata group="api" />
      <apidata name="IsSearchMatch" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.IsSearchMatch" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
        <parameter name="searchValues" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.IsSearchMatch(`0,System.StringComparison,System.String[])">
      <topicdata group="api" />
      <apidata name="IsSearchMatch" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.IsSearchMatch" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
        <parameter name="comparison">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
        <parameter name="searchValues" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.LoadRecord(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="LoadRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.LoadRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.LoadRecord(System.Object[])">
      <topicdata group="api" />
      <apidata name="LoadRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.LoadRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="primaryKeys" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.LoadRecordFunction">
      <topicdata group="api" />
      <apidata name="LoadRecordFunction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Func`2" ref="true">
          <specialization>
            <type api="T:System.Data.DataRow" ref="true" />
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.NewRecord">
      <topicdata group="api" />
      <apidata name="NewRecord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <returns>
        <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.NewRecordFunction">
      <topicdata group="api" />
      <apidata name="NewRecordFunction" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.PrimaryKeyCache">
      <topicdata group="api" />
      <apidata name="PrimaryKeyCache" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryKeyCache" />
      <setter name="set_PrimaryKeyCache" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.Model.ITableOperations.PrimaryKeyCache">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecord(Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="restriction">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecord(System.String,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="orderByExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="restriction">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCount(Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecordCount" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecordCount" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(Gemstone.Data.Model.RecordRestriction)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCount(System.String)">
      <topicdata group="api" />
      <apidata name="QueryRecordCount" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecordCount" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="searchText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCount(System.String)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecordCountWhere(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="QueryRecordCountWhere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.QueryRecordCountWhere(System.String,System.Object[])">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecords" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="restriction">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,Gemstone.Data.Model.RecordRestriction,System.Int32)">
      <topicdata group="api" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecords" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="orderByExpression" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="limit" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecords" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sortField">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ascending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="page">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecords(System.String,System.Boolean,System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="QueryRecords" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.QueryRecords" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sortField">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ascending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="page">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="searchText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecordsWhere(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="QueryRecordsWhere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.QueryRecordWhere(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="QueryRecordWhere" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.RootQueryRestriction">
      <topicdata group="api" />
      <apidata name="RootQueryRestriction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RootQueryRestriction" />
      <setter name="set_RootQueryRestriction" />
      <returns>
        <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.Model.ITableOperations.RootQueryRestriction">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.SearchRecords(System.String,System.Boolean,System.String,System.StringComparison)">
      <topicdata group="api" />
      <apidata name="SearchRecords" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sortField">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ascending">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="searchText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comparison" optional="true">
          <type api="T:System.StringComparison" ref="false" />
          <argument>
            <type api="T:System.StringComparison" ref="false" />
            <enumValue>
              <field name="OrdinalIgnoreCase" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.TableName">
      <topicdata group="api" />
      <apidata name="TableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_TableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.Model.ITableOperations.TableName">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.ToDataTable(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="ToDataTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="records">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute(System.String,System.Type,System.Attribute@)">
      <topicdata group="api" />
      <apidata name="TryGetFieldAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attribute" out="true">
          <referenceTo>
            <type api="T:System.Attribute" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute(System.String,System.Type,System.Attribute@)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute``1(System.String,``0@)">
      <topicdata group="api" />
      <apidata name="TryGetFieldAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="TAttribute">
          <constrained>
            <type api="T:System.Attribute" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute" out="true">
          <referenceTo>
            <template name="TAttribute" index="0" api="M:Gemstone.Data.Model.TableOperations`1.TryGetFieldAttribute``1(System.String,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.TryGetFieldAttribute``1(System.String,``0@)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.TypeRegistry">
      <topicdata group="api" />
      <apidata name="TypeRegistry" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TypeRegistry" />
      <setter name="set_TypeRegistry" />
      <returns>
        <type api="T:Gemstone.Expressions.Evaluator.TypeRegistry" ref="true" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.UnescapedTableName">
      <topicdata group="api" />
      <apidata name="UnescapedTableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_UnescapedTableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.Model.ITableOperations.UnescapedTableName">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.UpdateRecord(System.Data.DataRow,Gemstone.Data.Model.RecordRestriction)">
      <topicdata group="api" />
      <apidata name="UpdateRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.UpdateRecord(System.Data.DataRow,Gemstone.Data.Model.RecordRestriction)">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.UpdateRecord(`0,Gemstone.Data.Model.RecordRestriction,System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="UpdateRecord" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecord" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
        <parameter name="restriction" optional="true">
          <type api="T:Gemstone.Data.Model.RecordRestriction" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="applyRootQueryRestriction" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere(System.Data.DataRow,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="UpdateRecordWhere" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Gemstone.Data.Model.ITableOperations.UpdateRecordWhere(System.Data.DataRow,System.String,System.Object[])">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere(`0,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="UpdateRecordWhere" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Gemstone.Data.Model.TableOperations`1.UpdateRecordWhere" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <template name="T" index="0" api="T:Gemstone.Data.Model.TableOperations`1" />
        </parameter>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.TableOperations`1.UseCaseSensitiveFieldNames">
      <topicdata group="api" />
      <apidata name="UseCaseSensitiveFieldNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/TableOperations.cs" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UseCaseSensitiveFieldNames" />
      <setter name="set_UseCaseSensitiveFieldNames" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Gemstone.Data.Model.ITableOperations.UseCaseSensitiveFieldNames">
          <type api="T:Gemstone.Data.Model.ITableOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TableOperations`1" ref="true" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.TargetExpression">
      <topicdata group="api" />
      <apidata name="TargetExpression" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Gemstone.Data.Model.TargetExpression.TableName" />
        <element api="F:Gemstone.Data.Model.TargetExpression.FieldList" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.TargetExpression.FieldList">
      <topicdata group="api" notopic="" />
      <apidata name="FieldList" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.TargetExpression" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TargetExpression" ref="false" />
      </containers>
    </api>
    <api id="F:Gemstone.Data.Model.TargetExpression.TableName">
      <topicdata group="api" notopic="" />
      <apidata name="TableName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Gemstone.Data.Model.TargetExpression" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.TargetExpression" ref="false" />
      </containers>
    </api>
    <api id="T:Gemstone.Data.Model.UseEscapedNameAttribute">
      <topicdata group="api" />
      <apidata name="UseEscapedNameAttribute" group="type" subgroup="class" />
      <sourceContext file="Gemstone.Data/Model/UseEscapedNameAttribute.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor">
          <element api="M:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor" />
          <element api="M:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor(Gemstone.Data.DatabaseType)" />
        </element>
        <element api="P:Gemstone.Data.Model.UseEscapedNameAttribute.TargetDatabaseType" />
        <element api="P:Gemstone.Data.Model.UseEscapedNameAttribute.UseAnsiQuotes" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Gemstone.Data.Model.UseEscapedNameAttribute">
      <topicdata name="UseEscapedNameAttribute" group="list" subgroup="Methods" typeTopicId="T:Gemstone.Data.Model.UseEscapedNameAttribute" />
      <apidata name="UseEscapedNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.UseEscapedNameAttribute" />
      </containers>
    </api>
    <api id="Properties.T:Gemstone.Data.Model.UseEscapedNameAttribute">
      <topicdata name="UseEscapedNameAttribute" group="list" subgroup="Properties" typeTopicId="T:Gemstone.Data.Model.UseEscapedNameAttribute" />
      <apidata name="UseEscapedNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="netstandard" module="netstandard" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Gemstone.Data.Model.UseEscapedNameAttribute.TargetDatabaseType" />
        <element api="P:Gemstone.Data.Model.UseEscapedNameAttribute.UseAnsiQuotes" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.UseEscapedNameAttribute" />
      </containers>
    </api>
    <api id="Overload:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor" />
        <element api="M:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor(Gemstone.Data.DatabaseType)" />
      </elements>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.UseEscapedNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/UseEscapedNameAttribute.cs" />
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.UseEscapedNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor(Gemstone.Data.DatabaseType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Gemstone.Data.Model.UseEscapedNameAttribute.#ctor" />
      <sourceContext file="Gemstone.Data/Model/UseEscapedNameAttribute.cs" />
      <parameters>
        <parameter name="targetDatabaseType">
          <type api="T:Gemstone.Data.DatabaseType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.UseEscapedNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.UseEscapedNameAttribute.TargetDatabaseType">
      <topicdata group="api" />
      <apidata name="TargetDatabaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/UseEscapedNameAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetDatabaseType" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:Gemstone.Data.DatabaseType" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.UseEscapedNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Gemstone.Data.Model.UseEscapedNameAttribute.UseAnsiQuotes">
      <topicdata group="api" />
      <apidata name="UseAnsiQuotes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Gemstone.Data/Model/UseEscapedNameAttribute.cs" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseAnsiQuotes" />
      <setter name="set_UseAnsiQuotes" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Gemstone.Data" module="Gemstone.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.0.7 -- Release Build" />
          <noAptca />
        </library>
        <namespace api="N:Gemstone.Data.Model" />
        <type api="T:Gemstone.Data.Model.UseEscapedNameAttribute" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>